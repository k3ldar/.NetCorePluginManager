@model DocumentationPlugin.Models.DocumentViewModel
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer
@{
ViewData["Title"] = Model.Title;
}
<link rel="stylesheet" type="text/css" href="/css/documentation.css" />
<div class="row flex-xl-nowrap">
<div class="d-none d-lg-block col-lg-3 bd-sidebar docContents">
<h3>@Localizer[nameof(Languages.LanguageStrings.Contents)]</h3>
@Html.Raw(Model.AllReferences)
</div>
<div class="col-md-12 col-lg-7">
<h2>@Model.Title</h2>
@await Html.PartialAsync("_DocumentData.cshtml", Model)
</div>
<div class="d-none d-lg-block col-lg-2 bd-toc docReferences">
@if (Model.Contains != null)
{
<h3>@Localizer[nameof(Languages.LanguageStrings.InThisDocument)]</h3>
<ul>
@foreach (KeyValuePair<string, string> kvp in Model.Contains)
{
@if (Model.TranslateStrings)
{
<li><a href="@kvp.Key">@Localizer[kvp.Value]</a></li>
}
else
{
<li><a href="@kvp.Key">@kvp.Value</a></li>
}
}
</ul>
}
@if (Model.SeeAlso != null && Model.SeeAlso.Count > 0)
{
<h3>@Localizer[nameof(Languages.LanguageStrings.SeeAlso)]</h3>
<ul>
@foreach (var item in Model.SeeAlso)
{
<li>@Html.Raw($"<a href=\"{item.Key}\">{item.Value}</a>")</li>
}
</ul>
}
</div>
</div>
<div class="row justify-content-sm-center">
<div class="col col-sm-2">
@if (!String.IsNullOrEmpty(Model.PreviousDocument))
{
<p class="docPrevNext"><a href="/docs/Document/@SharedPluginFeatures.HtmlHelper.RouteFriendlyName(Model.PreviousDocument)">@Localizer[nameof(Languages.LanguageStrings.PreviousDocument)]</a></p>
}
else
{
<p class="docPrevNext">@Localizer[nameof(Languages.LanguageStrings.PreviousDocument)]</p>
}
</div>
<div class="col col-sm-2">
@if (!String.IsNullOrEmpty(Model.NextDocument))
{
<p class="docPrevNext"><a href="/docs/Document/@SharedPluginFeatures.HtmlHelper.RouteFriendlyName(Model.NextDocument)">@Localizer[nameof(Languages.LanguageStrings.NextDocument)]</a></p>
}
else
{
<p class="docPrevNext">@Localizer[nameof(Languages.LanguageStrings.NextDocument)]</p>
}
</div>
</div>