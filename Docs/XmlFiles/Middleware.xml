<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Middleware</name>
    </assembly>
    <members>
        <member name="T:Middleware.Address">
            <summary>
            Contains address details that can also be used for DeliveryAddress in IAccountProvider interface.
            </summary>
        </member>
        <member name="M:Middleware.Address.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Middleware.Address.#ctor(System.Int32@,System.Decimal@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Constructor
            </summary>
            <param name="id">Shipping costs for the address.</param>
            <param name="shipping">Shipping costs for the address.</param>
            <param name="businessName">Business name if applicable.</param>
            <param name="addressLine1">Address line 1.</param>
            <param name="addressLine2">Address line 2.</param>
            <param name="addressLine3">Address line 3.</param>
            <param name="city">City name.</param>
            <param name="county">County/state name.</param>
            <param name="postcode">Postal or zip code.</param>
            <param name="country">Postal or zip code.</param>
        </member>
        <member name="P:Middleware.Address.Id">
            <summary>
            Unique id for the address.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Address.Shipping">
            <summary>
            Shipping costs for the address.
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Address.BusinessName">
            <summary>
            Business name if applicable.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Address.AddressLine1">
            <summary>
            Address line 1.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Address.AddressLine2">
            <summary>
            Address line 2.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Address.AddressLine3">
            <summary>
            Address line 3.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Address.City">
            <summary>
            City name.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Address.County">
            <summary>
            County/state name.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Address.Postcode">
            <summary>
            Postal or zip code.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Address.Country">
            <summary>
            Country name.
            </summary>
            <value>string</value>
        </member>
        <member name="T:Middleware.Accounts.DeliveryAddress">
            <summary>
            Extended address information.  Extends Address class.
            </summary>
        </member>
        <member name="M:Middleware.Accounts.DeliveryAddress.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Middleware.Accounts.DeliveryAddress.#ctor(System.Int32@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.Decimal@)">
            <summary>
            Constructor
            </summary>
            <param name="addressId">Address id.</param>
            <param name="businessName">Name of business if applicable.</param>
            <param name="addressLine1">Address line 1.</param>
            <param name="addressLine2">Address line 2.</param>
            <param name="addressLine3">Address line 3.</param>
            <param name="city">Name of city.</param>
            <param name="county">County or State name.</param>
            <param name="postcode">Postal or zip code.</param>
            <param name="country">Country name.</param>
            <param name="postageCost">Postage costs.</param>
        </member>
        <member name="P:Middleware.Accounts.DeliveryAddress.AddressId">
            <summary>
            Address id
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Accounts.DeliveryAddress.PostageCost">
            <summary>
            Postage cost for the address.
            </summary>
            <value>decimal</value>
        </member>
        <member name="T:Middleware.Accounts.Marketing">
            <summary>
            Containse marketing details associated with a user, used in IAccountProvider interface.
            </summary>
        </member>
        <member name="M:Middleware.Accounts.Marketing.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Middleware.Accounts.Marketing.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="email">Accepts email offers.</param>
            <param name="telephone">Accepts telephone offers.</param>
            <param name="sms">Accepts sms offers.</param>
            <param name="postal">Accepts postal offers.</param>
        </member>
        <member name="P:Middleware.Accounts.Marketing.EmailOffers">
            <summary>
            Indicates whether the user wants email marketing offers or not.
            </summary>
            <value>bool</value>
        </member>
        <member name="P:Middleware.Accounts.Marketing.TelephoneOffers">
            <summary>
            Indicates whether the user wants telephone marketing offers or not.
            </summary>
            <value>bool</value>
        </member>
        <member name="P:Middleware.Accounts.Marketing.SMSOffers">
            <summary>
            Indicates whether the user wants sms marketing offers or not.
            </summary>
            <value>bool</value>
        </member>
        <member name="P:Middleware.Accounts.Marketing.PostalOffers">
            <summary>
            Indicates whether the user wants postal marketing offers or not.
            </summary>
            <value>bool</value>
        </member>
        <member name="T:Middleware.Accounts.Invoices.Invoice">
            <summary>
            Represents an invoice that is used for display within the website.  This is used by IAccountProvider and the UserAccount.Plugin module.
            </summary>
        </member>
        <member name="M:Middleware.Accounts.Invoices.Invoice.#ctor(System.Int32@,System.DateTime@,System.Decimal@,System.Globalization.CultureInfo@,Middleware.ProcessStatus@,Middleware.PaymentStatus@,Middleware.Accounts.DeliveryAddress,System.Collections.Generic.List{Middleware.Accounts.Invoices.InvoiceItem})">
            <summary>
            Constructor
            </summary>
            <param name="id">Unique invoice id.</param>
            <param name="date">Date and time the invoice was created.</param>
            <param name="postage">The cost of postage for the invoice.</param>
            <param name="culture">Invoice culture</param>
            <param name="processStatus">Current process status for the invoice.</param>
            <param name="paymentStatus">Current payment status for the invoice.</param>
            <param name="deliveryAddress">The address where the invoice has been dispatched to.</param>
            <param name="invoiceItems">List of all invoice items.</param>
        </member>
        <member name="P:Middleware.Accounts.Invoices.Invoice.Id">
            <summary>
            Unique invoice id.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.Invoice.Date">
            <summary>
            Date and time the invoice was created.
            </summary>
            <value>DateTime</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.Invoice.DeliveryAddress">
            <summary>
            The address where the invoice has been dispatched to.
            </summary>
            <value>DeliveryAddress</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.Invoice.Postage">
            <summary>
            The cost of postage for the invoice.
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.Invoice.Culture">
            <summary>
            Invoice culture.
            </summary>
            <value>CultureInfo</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.Invoice.Status">
            <summary>
            Current process status for the invoice.
            </summary>
            <value>ProcessStatus</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.Invoice.PaymentStatus">
            <summary>
            Current payment status for the invoice.
            </summary>
            <value>PaymentStatus</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.Invoice.InvoiceItems">
            <summary>
            List of all invoice items.
            </summary>
            <value>List&lt;InvoiceItem&gt;</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.Invoice.Discount">
            <summary>
            Total discount amount
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.Invoice.SubTotal">
            <summary>
            Total without tax
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.Invoice.Tax">
            <summary>
            Total Tax amount
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.Invoice.Total">
            <summary>
            Total cost + Tax
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.Invoice.ItemCount">
            <summary>
            Total number of items within the invoice.
            </summary>
            <value>decimal</value>
        </member>
        <member name="T:Middleware.Accounts.Invoices.InvoiceItem">
            <summary>
            Represents an individual invoice item within an Invoice used by IAccountProvider and UserAccount.Plugin module.
            </summary>
        </member>
        <member name="M:Middleware.Accounts.Invoices.InvoiceItem.#ctor(System.Int64@,System.String@,System.Decimal@,System.Int32@,System.Decimal@,Middleware.ItemStatus@,Middleware.DiscountType@,System.Decimal@)">
            <summary>
            Constructor
            </summary>
            <param name="id">Unique id of the invoice item.</param>
            <param name="description">Description of the item within the invoice.</param>
            <param name="cost">Cost of the item in the invoice.</param>
            <param name="taxRate">Tax rate applied to the invoiceable item.</param>
            <param name="quantity">Quantity of the item within the invoice.</param>
            <param name="status">Current status of the item within the invoice.</param>
            <param name="discountType">Type of discount, if appliccable, for the item within the invoice.</param>
            <param name="discount">Discount applied to the item within the invoice.</param>
        </member>
        <member name="P:Middleware.Accounts.Invoices.InvoiceItem.Id">
            <summary>
            Unique id of the invoice item.
            </summary>
            <value>long</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.InvoiceItem.Invoice">
            <summary>
            Invoice to which the item belongs.
            </summary>
            <value>Invoice</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.InvoiceItem.Description">
            <summary>
            Description of the item within the invoice.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.InvoiceItem.Price">
            <summary>
            Cost of the item in the invoice.
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.InvoiceItem.TaxRate">
            <summary>
            Tax rate applied to the invoiceable item.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.InvoiceItem.Quantity">
            <summary>
            Quantity of the item within the invoice.
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.InvoiceItem.Discount">
            <summary>
            Discount applied to the item within the invoice.
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.InvoiceItem.DiscountType">
            <summary>
            Type of discount, if appliccable, for the item within the invoice.
            </summary>
            <value>DiscountType</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.InvoiceItem.Status">
            <summary>
            Current status of the item within the invoice.
            </summary>
            <value>ItemStatus</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.InvoiceItem.Cost">
            <summary>
            Total + Tax
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.InvoiceItem.TotalTax">
            <summary>
            Total Tax amount
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.InvoiceItem.SubTotal">
            <summary>
            Subtotal of this item within the invoice.
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Invoices.InvoiceItem.TotalDiscount">
            <summary>
            Total discount for the item within the invoice.
            </summary>
            <value>decimal</value>
        </member>
        <member name="T:Middleware.Accounts.Licences.Licence">
            <summary>
            User licence.  Provides details on an individual user licence.
            </summary>
        </member>
        <member name="M:Middleware.Accounts.Licences.Licence.#ctor(System.Int32@,System.Int64@,Middleware.Accounts.Licences.LicenceType@,System.DateTime@,System.DateTime@,System.Boolean@,System.Boolean@,System.Byte@,System.Int32@,System.String@,System.String@)">
            <summary>
            Constructor
            </summary>
            <param name="id">Unique id of licence.</param>
            <param name="userId">Unique user id.</param>
            <param name="licenceType">Type of licence.</param>
            <param name="startDate">Date/Time licence valid from.</param>
            <param name="expireDate">Date/Time licence expires.</param>
            <param name="isValid">Indicates whether the licence is valid or not.</param>
            <param name="isTrial">Indicates whether the licence is a trial licence.</param>
            <param name="updateCount">Number of time the domain has been updated.</param>
            <param name="invoiceId">Unique invoice id associated with the licence.</param>
            <param name="domainName">Domain or Ip address where the licence is linked to.</param>
            <param name="encryptedLicence">Encrypted licence details.</param>
        </member>
        <member name="P:Middleware.Accounts.Licences.Licence.Id">
            <summary>
            Unique user id.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Accounts.Licences.Licence.UserId">
            <summary>
            Unique user id.
            </summary>
            <value>long</value>
        </member>
        <member name="P:Middleware.Accounts.Licences.Licence.LicenceType">
            <summary>
            Type of licence.
            </summary>
            <value>LicenceType</value>
        </member>
        <member name="P:Middleware.Accounts.Licences.Licence.StartDate">
            <summary>
            Date/Time licence valid from.
            </summary>
            <value>DateTime</value>
        </member>
        <member name="P:Middleware.Accounts.Licences.Licence.ExpireDate">
            <summary>
            Date/Time licence expires.
            </summary>
            <value>DateTime</value>
        </member>
        <member name="P:Middleware.Accounts.Licences.Licence.IsValid">
            <summary>
            Indicates whether the licence is valid or not.
            </summary>
            <value>bool</value>
        </member>
        <member name="P:Middleware.Accounts.Licences.Licence.IsTrial">
            <summary>
            Indicates whether the licence is a trial licence.
            </summary>
            <value>bool</value>
        </member>
        <member name="P:Middleware.Accounts.Licences.Licence.UpdateCount">
            <summary>
            Number of time the domain has been updated.
            </summary>
            <value>byte</value>
        </member>
        <member name="P:Middleware.Accounts.Licences.Licence.InvoiceId">
            <summary>
            Unique invoice id associated with the licence.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Accounts.Licences.Licence.DomainName">
            <summary>
            Domain or Ip address where the licence is linked to.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Accounts.Licences.Licence.EncryptedLicence">
            <summary>
            Encrypted licence details.
            </summary>
            <value>string</value>
        </member>
        <member name="T:Middleware.Accounts.Licences.LicenceType">
            <summary>
            List item for type of licences available.
            </summary>
        </member>
        <member name="M:Middleware.Accounts.Licences.LicenceType.#ctor(System.Int32@,System.String@)">
            <summary>
            Constructor
            </summary>
            <param name="id">Id of licence type.</param>
            <param name="description">Description of licence type.</param>
        </member>
        <member name="P:Middleware.Accounts.Licences.LicenceType.Id">
            <summary>
            Id of licence type.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Accounts.Licences.LicenceType.Description">
            <summary>
            Description of licence type.
            </summary>
            <value>string</value>
        </member>
        <member name="T:Middleware.Accounts.Orders.Order">
            <summary>
            Represents a users order, primarily used by IAccountProvider within the UserAccount.Plugin module.
            </summary>
        </member>
        <member name="M:Middleware.Accounts.Orders.Order.#ctor(System.Int32@,System.DateTime@,System.Decimal@,System.Globalization.CultureInfo@,Middleware.ProcessStatus@,Middleware.Accounts.DeliveryAddress,System.Collections.Generic.List{Middleware.Accounts.Orders.OrderItem})">
            <summary>
            Constructor
            </summary>
            <param name="id">Unique id for the order.</param>
            <param name="date">Date and time the order was created.</param>
            <param name="postage">Cost of postage for the order.</param>
            <param name="culture">Culture used for the order.</param>
            <param name="processStatus">Current process status for the order.</param>
            <param name="deliveryAddress">Delivery address where the order will be dispatched to.</param>
            <param name="orderItems">List of items within the order.</param>
        </member>
        <member name="P:Middleware.Accounts.Orders.Order.Id">
            <summary>
            Unique id for the order.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.Order.Date">
            <summary>
            Date and time the order was created.
            </summary>
            <value>DateTime</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.Order.DeliveryAddress">
            <summary>
            Delivery address where the order will be dispatched to.
            </summary>
            <value>DeliveryAddress</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.Order.Postage">
            <summary>
            Cost of postage for the order.
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.Order.Culture">
            <summary>
            Culture used for the order.
            </summary>
            <value>CultureInfo</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.Order.Status">
            <summary>
            Current process status for the order.
            </summary>
            <value>ProcessStatus</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.Order.OrderItems">
            <summary>
            List of items within the order.
            </summary>
            <value>List&lt;OrderItem&gt;</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.Order.Discount">
            <summary>
            Total discount amount
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.Order.SubTotal">
            <summary>
            Total without tax
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.Order.Tax">
            <summary>
            Total Tax amount
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.Order.Total">
            <summary>
            Total cost + Tax
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.Order.ItemCount">
            <summary>
            Count of items within the order.
            </summary>
            <value>decimal</value>
        </member>
        <member name="T:Middleware.Accounts.Orders.OrderItem">
            <summary>
            Represents an item within an Order created by a user.  This is primarily used by IAccountProvider and the UserAccount.Plugin module.
            </summary>
        </member>
        <member name="M:Middleware.Accounts.Orders.OrderItem.#ctor(System.Int64@,System.String@,System.Decimal@,System.Int32@,System.Decimal@,Middleware.ItemStatus@,Middleware.DiscountType@,System.Decimal@)">
            <summary>
            Constructor
            </summary>
            <param name="id">Unique id of order item.</param>
            <param name="description">Description of item.</param>
            <param name="cost">Price of the item.</param>
            <param name="taxRate">Rate of tax applied to the item within an order.</param>
            <param name="quantity">Quantity of items within an order.</param>
            <param name="status">Current status of item within the order.</param>
            <param name="discountType">Type of discount applied to the item.</param>
            <param name="discount">Discount amount applied to the item.</param>
        </member>
        <member name="P:Middleware.Accounts.Orders.OrderItem.Id">
            <summary>
            Unique id of order item.
            </summary>
            <value>long</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.OrderItem.Order">
            <summary>
            Order the item belongs to.
            </summary>
            <value>Order</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.OrderItem.Description">
            <summary>
            Description of item.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.OrderItem.Price">
            <summary>
            Price of the item.
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.OrderItem.TaxRate">
            <summary>
            Rate of tax applied to the item within an order.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.OrderItem.Quantity">
            <summary>
            Quantity of items within an order.
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.OrderItem.Discount">
            <summary>
            Discount amount applied to the item.
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.OrderItem.DiscountType">
            <summary>
            Type of discount applied to the item.
            </summary>
            <value>DiscountType</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.OrderItem.Status">
            <summary>
            Current status of item within the order.
            </summary>
            <value>ItemStatus</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.OrderItem.Cost">
            <summary>
            Total + Tax
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.OrderItem.TotalTax">
            <summary>
            Total Tax amount
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.OrderItem.SubTotal">
            <summary>
            Sub total value for the item.
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Accounts.Orders.OrderItem.TotalDiscount">
            <summary>
            Total discount for the item within the Order.
            </summary>
            <value>decimal</value>
        </member>
        <member name="T:Middleware.Accounts.IAccountProvider">
            <summary>
            Provides user account services predominantly used by UserAccount.Plugin module.
            
            This item must be implemented by the host application and made available via DI.
            </summary>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.ChangePassword(System.Int64@,System.String@)">
            <summary>
            Change a password for a specific user.
            </summary>
            <param name="userId">Unique id of user.</param>
            <param name="newPassword">New password that is to be set for the user.</param>
            <returns></returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.GetAddressOptions(Middleware.AddressOption@)">
            <summary>
            Retrieves the appropriate address options that are available for user addresses.
            </summary>
            <param name="addressOption">Address options to be shown.</param>
            <returns>AddressOptions</returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.GetUserAccountDetails(System.Int64@,System.String@,System.String@,System.String@,System.Boolean@,System.String@,System.Boolean@)">
            <summary>
            Retrieves default user account details.
            </summary>
            <param name="userId">Unique user id.</param>
            <param name="firstName">Users first name.</param>
            <param name="lastName">Users last name.</param>
            <param name="email">Users email address.</param>
            <param name="emailConfirmed">Indicates whether the email address has been confirmed or not.</param>
            <param name="telephone">Users telephone number.</param>
            <param name="telephoneConfirmed">Indicates whether the telephone number has been confirmed or not.</param>
            <returns></returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.SetUserAccountDetails(System.Int64@,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Updates default user account details.
            
            The values provided during this request will depend on the AddressOptions rules that are in place.
            </summary>
            <param name="userId">Unique user id.</param>
            <param name="firstName">Users first name.</param>
            <param name="lastName">Users last name.</param>
            <param name="email">Users email address.</param>
            <param name="telephone">Users telephone number.</param>
            <returns></returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.ConfirmEmailAddress(System.Int64@,System.String@)">
            <summary>
            Provides a mechanism whereby the website can confirm the users telephone number.
            
            Primarily the site sends a unique code associated with the account, the user then enters
            the code for verification.
            </summary>
            <param name="userId">Unique Id of the user.</param>
            <param name="confirmationCode">User supplied confirmation code.</param>
            <returns>bool.  True if the confirmation code was correct.</returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.ConfirmTelephoneNumber(System.Int64@,System.String@)">
            <summary>
            Provides a mechanism whereby the website can confirm the users telephone number.
            
            Primarily the site sends a unique code associated with the account, the user then enters
            the code for verification.
            </summary>
            <param name="userId">Unique Id of the user.</param>
            <param name="confirmationCode">User supplied confirmation code.</param>
            <returns>bool.  True if the confirmation code was correct.</returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.CreateAccount(System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.Int64@)">
            <summary>
            Creates a new user account.
            
            The values provided during this request will depend on the AddressOptions rules that are in place.
            </summary>
            <param name="email">Email address for the user.</param>
            <param name="firstName">Users first name.</param>
            <param name="surname">Users last name.</param>
            <param name="password">Password supplied by the user.</param>
            <param name="telephone">Telephone number provided by the user.</param>
            <param name="businessName">Business name supplied by the user.</param>
            <param name="addressLine1">Street and number for the address.</param>
            <param name="addressLine2">Second line of the address.</param>
            <param name="addressLine3">Third line of the address.</param>
            <param name="city">City wher the user lives.</param>
            <param name="county">County/State where the user lives.</param>
            <param name="postcode">Post/Zip code for the user.</param>
            <param name="countryCode">Country.</param>
            <param name="userId">out.  Unique user id for the new user account.</param>
            <returns>bool.  True if the account was created.</returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.DeleteAccount(System.Int64@)">
            <summary>
            Delete's a user account
            </summary>
            <param name="userId">Unique user id for the new user account.</param>
            <returns>bool.  True if the account was deleted, otherwise false.</returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.AccountLock(System.Int64@)">
            <summary>
            Locks a user account, preventing access to the system
            </summary>
            <param name="userId">Unique user id for the new user account.</param>
            <returns>bool.  True if the account was locked, otherwise false.</returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.AccountUnlock(System.Int64@)">
            <summary>
            Unlocks a user account enabling access to the system
            </summary>
            <param name="userId">Unique user id for the new user account.</param>
            <returns>bool.  True if the account was unlocked, otherwise false.</returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.SetBillingAddress(System.Int64@,Middleware.Address@)">
            <summary>
            Updates a billing address for a specific user.
            </summary>
            <param name="userId">Unique user id.</param>
            <param name="billingAddress">Billing address to be updated.</param>
            <returns>bool.  True if the billing address was updated.</returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.GetBillingAddress(System.Int64@)">
            <summary>
            Retrieves the billing address for a specific user.
            </summary>
            <param name="userId">Unique user id.</param>
            <returns>Address</returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.SetDeliveryAddress(System.Int64@,Middleware.Accounts.DeliveryAddress@)">
            <summary>
            Updates a delivery address for a user.
            </summary>
            <param name="userId">Unique user id.</param>
            <param name="deliveryAddress">Delivery address to be updated.</param>
            <returns>bool.  True if the address was updated.</returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.GetDeliveryAddresses(System.Int64@)">
            <summary>
            Retrieve all delivery addresses for a specific user.
            </summary>
            <param name="userId">Unique user id.</param>
            <returns>List&lt;<see cref="T:Middleware.Accounts.DeliveryAddress"/>&gt;</returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.GetDeliveryAddress(System.Int64@,System.Int32@)">
            <summary>
            Retrieves a specific delivery address for a user.
            </summary>
            <param name="userId">Unique user id.</param>
            <param name="deliveryAddressId">Unique id of the delivery address associated with the user.</param>
            <returns>DeliveryAddress</returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.DeleteDeliveryAddress(System.Int64@,Middleware.Accounts.DeliveryAddress@)">
            <summary>
            Deletes a delivery address for a user.
            </summary>
            <param name="userId">Unique user id.</param>
            <param name="deliveryAddress">Delivery address to be deleted.</param>
            <returns>bool.  True if the address was deleted.</returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.AddDeliveryAddress(System.Int64@,Middleware.Accounts.DeliveryAddress@)">
            <summary>
            Adds a new delivery address for the user.
            </summary>
            <param name="userId">Unique user id.</param>
            <param name="deliveryAddress">Delivery address for the user.</param>
            <returns>bool.  True if the address was created.</returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.GetMarketingOptions">
            <summary>
            Retrieves marketing preferences available to be viewed on the website.
            </summary>
            <returns>MarketingOptions</returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.GetMarketingPreferences(System.Int64@)">
            <summary>
            Retrieves marketing preferences for a specific user.
            </summary>
            <param name="userId">Unique user id.</param>
            <returns>Marketing</returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.SetMarketingPreferences(System.Int64@,Middleware.Accounts.Marketing@)">
            <summary>
            Updates marketing preferences for a specific user.
            </summary>
            <param name="userId">Unique user id.</param>
            <param name="marketing">New marketing options selected by the user.</param>
            <returns></returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.OrdersGet(System.Int64@)">
            <summary>
            Retrieves all orders for the user.
            </summary>
            <param name="userId">Unique user id.</param>
            <returns>List&lt;Order&gt;</returns>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.OrderPaid(Middleware.Accounts.Orders.Order@,Middleware.PaymentStatus@,System.String@)">
            <summary>
            Indicates that payment was successful for an order.  Implemntors would typically need to 
            create an Invoice for the Order item that has been paid for.
            </summary>
            <param name="order">Order being paid.</param>
            <param name="paymentStatus">Current PaymentStatus.  This could vary depending on the IPaymentProvider instance that was used.</param>
            <param name="message">A message provided during payment as part of the Order, could for instance delivery instructions.</param>
        </member>
        <member name="M:Middleware.Accounts.IAccountProvider.InvoicesGet(System.Int64@)">
            <summary>
            Retrieve all Invoice items for the user.
            </summary>
            <param name="userId">Unique user id.</param>
            <returns>List&lt;Invoice&gt;</returns>
        </member>
        <member name="T:Middleware.Blog.BlogComment">
            <summary>
            Comment made by a user for a blog entry
            </summary>
        </member>
        <member name="M:Middleware.Blog.BlogComment.#ctor(System.Int32@,System.Nullable{System.Int32}@,System.DateTime@,System.Int64@,System.String@,System.Boolean@,System.String@)">
            <summary>
            Default constructor
            </summary>
            <param name="id">Unique id of the comment.</param>
            <param name="parentComment">Parent comment id, if nested.</param>
            <param name="dateTime">Date and time comment made.</param>
            <param name="userId">Id of user making the comment.</param>
            <param name="userName">Name of person making the comment.</param>
            <param name="approved">Determines whether the comment is approved for display.</param>
            <param name="comment">Comment made by another user.</param>
        </member>
        <member name="P:Middleware.Blog.BlogComment.Id">
            <summary>
            Unique id for the comment.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Blog.BlogComment.ParentComment">
            <summary>
            Id of the parent comment.  Allows for nesting comments.
            </summary>
            <value>int?</value>
        </member>
        <member name="P:Middleware.Blog.BlogComment.DateTime">
            <summary>
            Date/Time the comment was made.
            </summary>
            <value>DateTime</value>
        </member>
        <member name="P:Middleware.Blog.BlogComment.Username">
            <summary>
            Name of user making the comment.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Blog.BlogComment.UserId">
            <summary>
            Unique user id of user making the comment.
            </summary>
            <value>long</value>
        </member>
        <member name="P:Middleware.Blog.BlogComment.Approved">
            <summary>
            Provides an option for comments to be reviewed prior to being displayed.
            </summary>
            <value>bool</value>
        </member>
        <member name="P:Middleware.Blog.BlogComment.Comment">
            <summary>
            Comment made by a user.
            </summary>
            <value>string</value>
        </member>
        <member name="T:Middleware.Blog.BlogItem">
            <summary>
            Blog item represents a blog post within a website.
            </summary>
        </member>
        <member name="M:Middleware.Blog.BlogItem.#ctor">
            <summary>
            Default constructor for new blogs.
            </summary>
        </member>
        <member name="M:Middleware.Blog.BlogItem.#ctor(System.Int32@,System.Int64@,System.String@,System.String@,System.String@,System.String@,System.Boolean@,System.DateTime@,System.DateTime@,System.DateTime@,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{Middleware.Blog.BlogComment}@)">
            <summary>
            Constructor for creating a BlogItem instance
            </summary>
            <param name="id">Unique id representing the blog entry.</param>
            <param name="userId">Unique id of user creating the blog entry.</param>
            <param name="title">Title of blog entry.</param>
            <param name="excerpt">Short description of blog entry.</param>
            <param name="blogtext">Blog text.</param>
            <param name="username">Name of user publishing the blog entry</param>
            <param name="published">Indicates whether the blog has been published or not.</param>
            <param name="publishDateTime">Date and time the blog entry is available.</param>
            <param name="created">Date and time the blog entry was created.</param>
            <param name="lastModified">Date and time the blog entry was last modified.</param>
            <param name="tags">Tags associated with the blog entry.</param>
            <param name="comments">List of comments for the blog entry.</param>
        </member>
        <member name="P:Middleware.Blog.BlogItem.Id">
            <summary>
            Unique id representing the blog entry.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Blog.BlogItem.UserId">
            <summary>
            Unique id of user creating the blog entry.
            </summary>
        </member>
        <member name="P:Middleware.Blog.BlogItem.Title">
            <summary>
            Title of blog entry.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Blog.BlogItem.Excerpt">
            <summary>
            Brief description describing the blog entry.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Blog.BlogItem.BlogText">
            <summary>
            The main blog text.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Blog.BlogItem.Username">
            <summary>
            Name of user creating the blog entry.
            </summary>
            <string>string</string>
            <value>string</value>
        </member>
        <member name="P:Middleware.Blog.BlogItem.Published">
            <summary>
            Indicates whether the blog entry has been published or not.
            </summary>
            <value>bool</value>
        </member>
        <member name="P:Middleware.Blog.BlogItem.PublishDateTime">
            <summary>
            The date/time the blog entry will appear live on the website.
            </summary>
            <value>DateTime</value>
        </member>
        <member name="P:Middleware.Blog.BlogItem.Created">
            <summary>
            Date and time the blog was created.
            </summary>
            <value>DateTime</value>
        </member>
        <member name="P:Middleware.Blog.BlogItem.LastModified">
            <summary>
            Date and time the blog entry was last modified.
            </summary>
            <value>DateTime</value>
        </member>
        <member name="P:Middleware.Blog.BlogItem.IsAvailable">
            <summary>
            Determines whether the blog entry is visible on the website or not.
            </summary>
            <value>bool</value>
        </member>
        <member name="P:Middleware.Blog.BlogItem.Tags">
            <summary>
            Descriptive tags for the blog.
            </summary>
            <value>List&lt;string&gt;</value>
        </member>
        <member name="P:Middleware.Blog.BlogItem.Comments">
            <summary>
            List of comments for the blog entry.
            </summary>
            <value>List&lt;BlogComment&gt;</value>
        </member>
        <member name="M:Middleware.Blog.BlogItem.Equals(System.Object)">
            <summary>
            Determines whether objects are equal or not
            </summary>
            <param name="obj">Object that is being compared</param>
            <returns>bool</returns>
        </member>
        <member name="M:Middleware.Blog.BlogItem.GetHashCode">
            <summary>
            Retrieves the Hashcode for the BlogItem
            </summary>
            <returns></returns>
        </member>
        <member name="M:Middleware.Blog.BlogItem.UpdateBlog(System.String@,System.String@,System.String@,System.Boolean@,System.DateTime@,System.Collections.Generic.List{System.String}@)">
            <summary>
            Updates the public properties for a blog entry.
            </summary>
            <param name="title">Title of blog.</param>
            <param name="excerpt">Excerpt for blog.</param>
            <param name="blogText">Blog text.</param>
            <param name="published">Indicates whether the blog is published.</param>
            <param name="publishDateTime">Date and time the blog can be published.</param>
            <param name="tags">Blog tags.</param>
        </member>
        <member name="T:Middleware.Country">
            <summary>
            Country class designed to hold basic country data for viewing only.
            </summary>
        </member>
        <member name="M:Middleware.Country.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Middleware.Country.#ctor(System.String@,System.String@,System.Boolean@)">
            <summary>
            Constructor
            </summary>
            <param name="name">Name of country.</param>
            <param name="code">Country code.</param>
            <param name="visible">Indicates whether the country is visible or not.</param>
        </member>
        <member name="P:Middleware.Country.Name">
            <summary>
            Name of country.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Country.Code">
            <summary>
            Country code.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Country.Visible">
            <summary>
            Indicates whether the country is visible or not.
            </summary>
            <value>bool</value>
        </member>
        <member name="T:Middleware.Downloads.DownloadCategory">
            <summary>
            Available download categories including a list of DownloadItem's that are available for the category.
            </summary>
        </member>
        <member name="M:Middleware.Downloads.DownloadCategory.#ctor(System.Int32@,System.String@,System.Collections.Generic.List{Middleware.Downloads.DownloadItem}@)">
            <summary>
            Constructor
            </summary>
            <param name="id">Unique id for category.</param>
            <param name="name">Name of download category.</param>
            <param name="downloads">List of all download items that are within the category.</param>
        </member>
        <member name="P:Middleware.Downloads.DownloadCategory.Id">
            <summary>
            Unique id for category.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Downloads.DownloadCategory.Name">
            <summary>
            Name of download category.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Downloads.DownloadCategory.Downloads">
            <summary>
            List of all download items that are within the category.
            </summary>
            <value>List&lt;DownloadItem&gt;</value>
        </member>
        <member name="T:Middleware.Downloads.DownloadItem">
            <summary>
            Represents a downloadable file that is used with IDownloadProvider and DownloadPlugin module.
            </summary>
        </member>
        <member name="M:Middleware.Downloads.DownloadItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Middleware.Downloads.DownloadItem.#ctor(System.Int32@,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Constructor
            </summary>
            <param name="id">Unique id of download item.</param>
            <param name="name">Name of downloadable item.</param>
            <param name="description">Description of downloadable item.</param>
            <param name="version">Current version of downloadable item.</param>
            <param name="filename">Name of the physical file for the downlaod item.</param>
        </member>
        <member name="M:Middleware.Downloads.DownloadItem.#ctor(System.Int32@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Constructor
            </summary>
            <param name="id">Unique id of download item.</param>
            <param name="name">Name of downloadable item.</param>
            <param name="description">Description of downloadable item.</param>
            <param name="version">Current version of downloadable item.</param>
            <param name="filename">Name of the physical file for the downlaod item.</param>
            <param name="icon">Icon used to represent the download item.</param>
            <param name="size">Size of the downloadable file.</param>
        </member>
        <member name="P:Middleware.Downloads.DownloadItem.Id">
            <summary>
            Unique id of download item.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Downloads.DownloadItem.Name">
            <summary>
            Name of downloadable item.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Downloads.DownloadItem.Description">
            <summary>
            Description of downloadable item.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Downloads.DownloadItem.Version">
            <summary>
            Current version of downloadable item.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Downloads.DownloadItem.Filename">
            <summary>
            Name of the physical file for the downlaod item.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Downloads.DownloadItem.Icon">
            <summary>
            Icon used to represent the download item.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Downloads.DownloadItem.Size">
            <summary>
            Size of the downloadable file.
            </summary>
            <value>string</value>
        </member>
        <member name="T:Middleware.DynamicContent.DynamicContentPage">
            <summary>
            Contains the contents for a dynamic page
            </summary>
        </member>
        <member name="M:Middleware.DynamicContent.DynamicContentPage.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Middleware.DynamicContent.DynamicContentPage.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="id">Id of page</param>
        </member>
        <member name="P:Middleware.DynamicContent.DynamicContentPage.Id">
            <summary>
            Unique page id
            </summary>
        </member>
        <member name="P:Middleware.DynamicContent.DynamicContentPage.Name">
            <summary>
            Name of dynamic page
            </summary>
        </member>
        <member name="P:Middleware.DynamicContent.DynamicContentPage.Content">
            <summary>
            Dynamic content that will be displayed within the page
            </summary>
        </member>
        <member name="P:Middleware.DynamicContent.DynamicContentPage.ActiveFrom">
            <summary>
            Date/time the page will be active from
            </summary>
            <value>DateTime</value>
        </member>
        <member name="P:Middleware.DynamicContent.DynamicContentPage.ActiveTo">
            <summary>
            Date/time the page will be active until
            </summary>
            <value>DateTime</value>
        </member>
        <member name="P:Middleware.DynamicContent.DynamicContentPage.RouteName">
            <summary>
            RouteName that is used as part of the Uri to navigate to the page
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.DynamicContent.DynamicContentPage.BackgroundColor">
            <summary>
            Color of background, default is white.  Defined as hex color
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.DynamicContent.DynamicContentPage.BackgroundImage">
            <summary>
            Uri for image for background, this will be stretched across entire page.
            </summary>
            <value>string</value>
        </member>
        <member name="M:Middleware.DynamicContent.DynamicContentPage.AddContentTemplate(SharedPluginFeatures.DynamicContent.DynamicContentTemplate,System.String)">
            <summary>
            Adds a new template items to the dynamic content page
            </summary>
            <param name="dynamicContentTemplate">New dynamic content template to be added.</param>
            <param name="beforeControlId">Unique id of the control which the new template will be placed next to (before).</param>
        </member>
        <member name="T:Middleware.DynamicContent.IDynamicContentProvider">
            <summary>
            Dynamic content provider for integrating with the DynamicContent.Plugin module.
            
            This item must be implemented by the host application and made available via DI.
            </summary>
        </member>
        <member name="M:Middleware.DynamicContent.IDynamicContentProvider.CreateCustomPage">
            <summary>
            Creates a new custom page and returns the id of the new page
            </summary>
            <returns>int</returns>
        </member>
        <member name="M:Middleware.DynamicContent.IDynamicContentProvider.GetCustomPageList">
            <summary>
            Retrieves a list of custom pages
            </summary>
            <returns>List&lt;DynamicContentTemplate&gt;</returns>
        </member>
        <member name="M:Middleware.DynamicContent.IDynamicContentProvider.GetCustomPages">
            <summary>
            Retrieves all custom pages
            </summary>
            <returns>List&lt;IDynamicContentPage&gt;</returns>
        </member>
        <member name="M:Middleware.DynamicContent.IDynamicContentProvider.GetCustomPage(System.Int32)">
            <summary>
            Retrieves dynamic page content by id
            </summary>
            <param name="id">Id of page to find</param>
            <returns>IDynamicContentPage</returns>
        </member>
        <member name="M:Middleware.DynamicContent.IDynamicContentProvider.Templates">
            <summary>
            Retrieves all dynamic content templates
            </summary>
            <returns>List&lt;DynamicContentTemplate&gt;</returns>
        </member>
        <member name="M:Middleware.DynamicContent.IDynamicContentProvider.PageNameExists(System.Int32,System.String)">
            <summary>
            Determines whether the page name already exists
            </summary>
            <param name="id">Id of current page</param>
            <param name="pageName">Name of page to be validated.</param>
            <returns>bool</returns>
        </member>
        <member name="M:Middleware.DynamicContent.IDynamicContentProvider.RouteNameExists(System.Int32,System.String)">
            <summary>
            Determines whether a route name already exists
            </summary>
            <param name="id">Id of current page</param>
            <param name="routeName">Name of route to be validated.</param>
            <returns></returns>
        </member>
        <member name="M:Middleware.DynamicContent.IDynamicContentProvider.Save(Middleware.IDynamicContentPage)">
            <summary>
            Saves the dynamic content page
            </summary>
            <param name="dynamicContentPage">Dynamic content page to be saved</param>
            <returns>bool</returns>
        </member>
        <member name="M:Middleware.DynamicContent.IDynamicContentProvider.SaveUserInput(System.String)">
            <summary>
            Provides an opportunity for user input that is input via custom forms to be saved
            </summary>
            <param name="data">Form data to be saved</param>
            <returns>bool</returns>
        </member>
        <member name="T:Middleware.Helpdesk.Feedback">
            <summary>
            Feedback item used in HelpdeskPlugin module and IHelpdeskProvider interface.
            </summary>
        </member>
        <member name="M:Middleware.Helpdesk.Feedback.#ctor(System.Int64@,System.String@,System.String@,System.Boolean@)">
            <summary>
            Constructor
            </summary>
            <param name="id">Unique id of feedback item.</param>
            <param name="username">Username of user providing feedback.</param>
            <param name="message">Feedback message provided.</param>
            <param name="showOnWebsite">Indicates whether the feedback can be shown on a website</param>
        </member>
        <member name="P:Middleware.Helpdesk.Feedback.Id">
            <summary>
            Unique id of feedback item.
            </summary>
            <value>long</value>
        </member>
        <member name="P:Middleware.Helpdesk.Feedback.Username">
            <summary>
            Username of user providing feedback.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Helpdesk.Feedback.Message">
            <summary>
            Feedback message provided.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Helpdesk.Feedback.ShowOnWebsite">
            <summary>
            Indicates whether the feedback can be shown on a website.
            </summary>
            <value>bool</value>
        </member>
        <member name="T:Middleware.Helpdesk.HelpdeskTicket">
            <summary>
            Represents a Helpdesk support ticket and used with IHelpdeskProvider and the HelpdeskPlugin module.
            </summary>
        </member>
        <member name="M:Middleware.Helpdesk.HelpdeskTicket.#ctor(System.Int64@,Middleware.LookupListItem@,Middleware.LookupListItem@,Middleware.LookupListItem@,System.String@,System.String@,System.DateTime@,System.DateTime@,System.String@,System.String@,System.String@,System.Collections.Generic.List{Middleware.Helpdesk.HelpdeskTicketMessage}@)">
            <summary>
            Constructor
            </summary>
            <param name="id">Unique id of the helpdesk ticket.</param>
            <param name="priority">Priority assigned to the support ticket.</param>
            <param name="department">Department to which the support ticket is assigned.</param>
            <param name="status">Current status of the helpdesk ticket.</param>
            <param name="key">Unique ticket key used to identify the ticket.</param>
            <param name="subject">Subject of the helpdesk message.</param>
            <param name="dateCreated">Date and time the ticket was created.</param>
            <param name="dateLastUpdated">Date and time the ticket was last updated.</param>
            <param name="createdBy">Name of the person creating the support ticket.</param>
            <param name="createdByEmail">Email address of the person who created the support ticket.</param>
            <param name="lastReplier">Name of the person who last responded to the support ticket.</param>
            <param name="messages">List of all HelpdeskTicketMessage messages within the support ticket.</param>
        </member>
        <member name="P:Middleware.Helpdesk.HelpdeskTicket.Id">
            <summary>
            Unique id of the helpdesk ticket.
            </summary>
            <value>long</value>
        </member>
        <member name="P:Middleware.Helpdesk.HelpdeskTicket.Priority">
            <summary>
            Priority assigned to the support ticket.
            </summary>
            <value>LookupListItem</value>
        </member>
        <member name="P:Middleware.Helpdesk.HelpdeskTicket.Department">
            <summary>
            Department to which the support ticket is assigned.
            </summary>
            <value>LookupListItem</value>
        </member>
        <member name="P:Middleware.Helpdesk.HelpdeskTicket.Status">
            <summary>
            Current status of the helpdesk ticket.
            </summary>
            <value>LookupListItem</value>
        </member>
        <member name="P:Middleware.Helpdesk.HelpdeskTicket.Key">
            <summary>
            Unique ticket key used to identify the ticket.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Helpdesk.HelpdeskTicket.Subject">
            <summary>
            Subject of the helpdesk message.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Helpdesk.HelpdeskTicket.DateCreated">
            <summary>
            Date and time the ticket was created.
            </summary>
            <value>DateTime</value>
        </member>
        <member name="P:Middleware.Helpdesk.HelpdeskTicket.DateLastUpdated">
            <summary>
            Date and time the ticket was last updated.
            </summary>
            <value>DateTime</value>
        </member>
        <member name="P:Middleware.Helpdesk.HelpdeskTicket.CreatedBy">
            <summary>
            Name of the person creating the support ticket.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Helpdesk.HelpdeskTicket.CreatedByEmail">
            <summary>
            Email address of the person who created the support ticket.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Helpdesk.HelpdeskTicket.LastReplier">
            <summary>
            Name of the person who last responded to the support ticket.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Helpdesk.HelpdeskTicket.Messages">
            <summary>
            List of all HelpdeskTicketMessage messages within the support ticket.
            </summary>
            <value>List&lt;HelpdestTicketMessage&gt;</value>
        </member>
        <member name="T:Middleware.Helpdesk.HelpdeskTicketMessage">
            <summary>
            Individual message for a HelpdeskTicket message.
            </summary>
        </member>
        <member name="M:Middleware.Helpdesk.HelpdeskTicketMessage.#ctor(System.DateTime@,System.String@,System.String@)">
            <summary>
            Constructor
            </summary>
            <param name="dateCreated">Date/time message was created.</param>
            <param name="userName">Name of the person creating the message.</param>
            <param name="message">Message.</param>
        </member>
        <member name="P:Middleware.Helpdesk.HelpdeskTicketMessage.DateCreated">
            <summary>
            Date/time message was created.
            </summary>
            <value>DateTime</value>
        </member>
        <member name="P:Middleware.Helpdesk.HelpdeskTicketMessage.UserName">
            <summary>
            Name of the person creating the message.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Helpdesk.HelpdeskTicketMessage.Message">
            <summary>
            Message.
            </summary>
            <value>string</value>
        </member>
        <member name="T:Middleware.Helpdesk.KnowledgeBaseGroup">
            <summary>
            Represents a knowledgebase group item.  Used with IHelpdeskProvider and HelpdeskPlugin module.
            </summary>
        </member>
        <member name="M:Middleware.Helpdesk.KnowledgeBaseGroup.#ctor(System.Int32@,System.String@,System.String@,System.Int32@,System.Int32@,Middleware.Helpdesk.KnowledgeBaseGroup@,System.Collections.Generic.List{Middleware.Helpdesk.KnowledgeBaseItem}@)">
            <summary>
            Constructor
            </summary>
            <param name="id">Unique id of the knowledgebase group.</param>
            <param name="name">Name of the knowledgebase group item.</param>
            <param name="description">Description for the group.</param>
            <param name="order">Sort order for the group item compared to other items.</param>
            <param name="viewCount">Number of times the group has been viewed.</param>
            <param name="parent">Knowledgebase group parent, or null if there is no parent.</param>
            <param name="items">List of KnowledgeBaseItem's that are within the group.</param>
        </member>
        <member name="P:Middleware.Helpdesk.KnowledgeBaseGroup.Id">
            <summary>
            Unique id of the knowledgebase group.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Helpdesk.KnowledgeBaseGroup.Name">
            <summary>
            Name of the knowledgebase group item.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Helpdesk.KnowledgeBaseGroup.Parent">
            <summary>
            Knowledgebase group parent, or null if there is no parent.
            </summary>
            <value>KnowledgeBaseGroup</value>
        </member>
        <member name="P:Middleware.Helpdesk.KnowledgeBaseGroup.Description">
            <summary>
            Description for the group.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Helpdesk.KnowledgeBaseGroup.ViewCount">
            <summary>
            Number of times the group has been viewed.
            </summary>
            <value></value>
        </member>
        <member name="P:Middleware.Helpdesk.KnowledgeBaseGroup.Order">
            <summary>
            Sort order for the group item compared to other items.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Helpdesk.KnowledgeBaseGroup.Items">
            <summary>
            List of KnowledgeBaseItem's that are within the group.
            </summary>
            <value>List&lt;KnowledgeBaseItem&gt;</value>
        </member>
        <member name="T:Middleware.Helpdesk.KnowledgeBaseItem">
            <summary>
            Represents a knowledgebase item that is part of a KnowledgeBaseGroup and used by IHelpdeskProvider within the HelpdeskPlugin module.
            </summary>
        </member>
        <member name="M:Middleware.Helpdesk.KnowledgeBaseItem.#ctor(System.Int32@,System.String@,System.Int32@,System.String@)">
            <summary>
            Constructor
            </summary>
            <param name="id">Unique id of the knowledgebase item.</param>
            <param name="description">Description of the knowledgebase item.</param>
            <param name="viewCount">Number of times the knowledgebase item has been viewed.</param>
            <param name="content">Content for the knowledgebase item.</param>
        </member>
        <member name="P:Middleware.Helpdesk.KnowledgeBaseItem.Id">
            <summary>
            Unique id of the knowledgebase item.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Helpdesk.KnowledgeBaseItem.Description">
            <summary>
            Description of the knowledgebase item.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Helpdesk.KnowledgeBaseItem.ViewCount">
            <summary>
            Number of times the knowledgebase item has been viewed.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Helpdesk.KnowledgeBaseItem.Content">
            <summary>
            Content for the knowledgebase item.
            </summary>
            <value>string</value>
        </member>
        <member name="M:Middleware.Helpdesk.KnowledgeBaseItem.IncreastViewCount">
            <summary>
            Increases the view count the item by one.
            </summary>
        </member>
        <member name="T:Middleware.Helpdesk.IHelpdeskProvider">
            <summary>
            Helpdesk provider for integrating with the HelpdeskPlugin module.
            
            This item must be implemented by the host application and made available via DI.
            </summary>
        </member>
        <member name="M:Middleware.Helpdesk.IHelpdeskProvider.GetFeedback(System.Boolean@)">
            <summary>
            Retrieve all feedback to be displayed on the website.
            </summary>
            <param name="publiclyVisible">bool.  Determine whether all feedback should be retrieved, or only publicly visible feedback.</param>
            <returns>List&lt;Feedback&gt;</returns>
        </member>
        <member name="M:Middleware.Helpdesk.IHelpdeskProvider.SubmitFeedback(System.Int64@,System.String@,System.String@)">
            <summary>
            Request to submit feedback for a website.
            </summary>
            <param name="userId">Id of user leaving feedback, if they are logged in.</param>
            <param name="name">Name of user leaving feedback for the website.</param>
            <param name="feedback">Feedback being left for the website.</param>
            <returns>bool.  True if the feedback was successfully submitted.</returns>
        </member>
        <member name="M:Middleware.Helpdesk.IHelpdeskProvider.GetTicketPriorities">
            <summary>
            Retrieve a list of ticket priorities to be displayed to the user submitting a ticket.
            </summary>
            <returns>List&lt;LookupListItem&gt;</returns>
        </member>
        <member name="M:Middleware.Helpdesk.IHelpdeskProvider.GetTicketDepartments">
            <summary>
            Retrieve a list of all ticket departments to be display to the user submitting a ticket.
            </summary>
            <returns>List&lt;LookupListItem&gt;</returns>
        </member>
        <member name="M:Middleware.Helpdesk.IHelpdeskProvider.GetTicketStatus">
            <summary>
            Retrieve a list of all available ticket statuses.
            </summary>
            <returns>List&lt;LookupListItem&gt;</returns>
        </member>
        <member name="M:Middleware.Helpdesk.IHelpdeskProvider.SubmitTicket(System.Int64@,System.Int32@,System.Int32@,System.String@,System.String@,System.String@,System.String@,Middleware.Helpdesk.HelpdeskTicket@)">
            <summary>
            Submits a support ticket to the website.
            </summary>
            <param name="userId">Unique id of user submitting a ticket, if they are logged on.</param>
            <param name="department">Department the ticket is being submitted to.</param>
            <param name="priority">User defined priority of the ticket.</param>
            <param name="userName">Name of the user submitting the ticket.</param>
            <param name="email">Email address of the user submitting the ticket.</param>
            <param name="subject">Subject of the support ticket.</param>
            <param name="message">Support ticket message.</param>
            <param name="ticket">out.  Helpdeskticket of newly created ticket.</param>
            <returns>bool.  True if the ticket was successfully submitted.</returns>
        </member>
        <member name="M:Middleware.Helpdesk.IHelpdeskProvider.GetTicket(System.Int64@)">
            <summary>
            Retrieve a ticket using the unique ticket Id.
            </summary>
            <param name="id">Unique ticket id being requested.</param>
            <returns>HelpdeskTicket</returns>
        </member>
        <member name="M:Middleware.Helpdesk.IHelpdeskProvider.GetTicket(System.String@,System.String@)">
            <summary>
            Retreive a ticket using the users email address and the unique ticket key.
            </summary>
            <param name="email">Email address of the user who submitted the ticket.</param>
            <param name="ticketKey">Unique ticket key supplied when the ticket was created.</param>
            <returns>Hlepdeskticket</returns>
        </member>
        <member name="M:Middleware.Helpdesk.IHelpdeskProvider.TicketRespond(Middleware.Helpdesk.HelpdeskTicket@,System.String@,System.String@)">
            <summary>
            Submits a response to a Helpdesk support ticket.
            </summary>
            <param name="ticket">HelpdeskTicket being responded to.</param>
            <param name="name">Name of person responding.</param>
            <param name="message">Message response.</param>
            <returns>bool.  True if the response was successfully submitted.</returns>
        </member>
        <member name="M:Middleware.Helpdesk.IHelpdeskProvider.GetKnowledgebaseGroups(System.Int64@,Middleware.Helpdesk.KnowledgeBaseGroup@)">
            <summary>
            Retrieves a list of all KnowledgeBaseGroup items.
            </summary>
            <param name="userId">Id of the user viewing the groups, if they are logged in.</param>
            <param name="parent">Group parent if there is one, otherwise null for groups at the top of the heirerarchy.</param>
            <returns>List&lt;KnowledgeBaseGroup&gt;</returns>
        </member>
        <member name="M:Middleware.Helpdesk.IHelpdeskProvider.GetKnowledgebaseGroup(System.Int64@,System.Int32@)">
            <summary>
            Retrieves an individual KnowledgeBaseGroup item.
            </summary>
            <param name="userId">Unique id of the user viewing the group, if they are logged in.</param>
            <param name="id">Id of the KnowledgeBaseGroup being retrieved.</param>
            <returns>KnowledgeBaseGroup</returns>
        </member>
        <member name="M:Middleware.Helpdesk.IHelpdeskProvider.GetKnowledgebaseItem(System.Int64@,System.Int32@,Middleware.Helpdesk.KnowledgeBaseItem@,Middleware.Helpdesk.KnowledgeBaseGroup@)">
            <summary>
            Retrieves an individual KnowledgeBaseItem.
            </summary>
            <param name="userId">Id of the user viewing the KnowledgeBaseItem, if they are logged on.</param>
            <param name="id">Id of the KnowledgeBaseItem.</param>
            <param name="knowledgebaseItem">out.  KnowledgeBaseItem being retrieved.</param>
            <param name="parentGroup">KnowledgeBaseGroup item which is the parent group of the item being retrieved.</param>
            <returns>bool.  True if KnowledgeBaseItem is being returned.</returns>
        </member>
        <member name="M:Middleware.Helpdesk.IHelpdeskProvider.KnowledbaseView(Middleware.Helpdesk.KnowledgeBaseItem@)">
            <summary>
            Indicates that a KnowledgeBaseItem has been viewed.
            </summary>
            <param name="item">KnowledgeBaseItem being viewed.</param>
        </member>
        <member name="T:Middleware.Images.ImageFile">
            <summary>
            Contains details for image files return by <see cref="T:Middleware.Interfaces.IImageProvider"/>
            </summary>
        </member>
        <member name="M:Middleware.Images.ImageFile.#ctor(System.Uri,System.String)">
            <summary>
            Constructor used for valid existing disk based file
            </summary>
            <param name="uri">Uri for the image file</param>
            <param name="fileName">Path and name of file</param>
            <exception cref="T:System.ArgumentNullException">Thrown if uri is null</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if fileName is null or empty</exception>
            <exception cref="T:System.ArgumentException">Thrown if fileName does not exist</exception>
        </member>
        <member name="M:Middleware.Images.ImageFile.#ctor(System.Uri,System.String,System.String,System.Int64,System.DateTime,System.DateTime)">
            <summary>
            Constructor used for non disk based file information
            </summary>
            <param name="uri">Uri for the image file</param>
            <param name="fileName">Name of file</param>
            <param name="fileExtension">File extension type</param>
            <param name="size">Size of file</param>
            <param name="createdDate">Date and time created</param>
            <param name="modifiedDate">Date and time last modified</param>
            <exception cref="T:System.ArgumentNullException">Thrown if uri is null</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if fileName is null or empty</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if fileExtension is null or empty</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if size is less than zero</exception>
        </member>
        <member name="P:Middleware.Images.ImageFile.Name">
            <summary>
            Name of image file
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Images.ImageFile.FileExtension">
            <summary>
            Extension type for file
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Images.ImageFile.Size">
            <summary>
            Size of file in bytes
            </summary>
            <value>long</value>
        </member>
        <member name="P:Middleware.Images.ImageFile.CreateDate">
            <summary>
            Date/Time file created
            </summary>
            <value>DateTime</value>
        </member>
        <member name="P:Middleware.Images.ImageFile.ModifiedDate">
            <summary>
            Date/Time file last modified
            </summary>
            <value>DateTime</value>
        </member>
        <member name="P:Middleware.Images.ImageFile.ImageUri">
            <summary>
            Uri for image
            </summary>
            <value>string</value>
        </member>
        <member name="T:Middleware.UserLoginDetails">
            <summary>
            User login details, used by ILoginProvider interface.
            </summary>
        </member>
        <member name="M:Middleware.UserLoginDetails.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Middleware.UserLoginDetails.#ctor(System.Int64)">
            <summary>
            Constructor.
            </summary>
            <param name="userId">Unique user id.</param>
        </member>
        <member name="M:Middleware.UserLoginDetails.#ctor(System.Int64@,System.Boolean@)">
            <summary>
            Constructor
            </summary>
            <param name="userId">Unique user id.</param>
            <param name="rememberMe">Indicates whether the login should be remembered or not (can include adding a cookie).</param>
        </member>
        <member name="P:Middleware.UserLoginDetails.UserId">
            <summary>
            Unique user id.
            </summary>
            <value>long</value>
        </member>
        <member name="P:Middleware.UserLoginDetails.Username">
            <summary>
            Name of user.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.UserLoginDetails.Email">
            <summary>
            Email address for the user
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.UserLoginDetails.RememberMe">
            <summary>
            Indicates that the login details should be remembered.
            </summary>
            <value>bool</value>
        </member>
        <member name="T:Middleware.LookupListItem">
            <summary>
            Standard lookup list item.  Contains an id and description and is used in a variety of places.
            </summary>
        </member>
        <member name="M:Middleware.LookupListItem.#ctor(System.Int32@,System.String@)">
            <summary>
            Default constructor
            </summary>
            <param name="id">Id of lookup item.</param>
            <param name="descirption">Description of lookup item.</param>
        </member>
        <member name="P:Middleware.LookupListItem.Id">
            <summary>
            Unique id of lookup item.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.LookupListItem.Description">
            <summary>
            Description of lookup item.
            </summary>
            <value>string</value>
        </member>
        <member name="T:Middleware.Products.Product">
            <summary>
            Display options for a product within a website.
            </summary>
        </member>
        <member name="M:Middleware.Products.Product.#ctor(System.Int32@,System.Int32@,System.String@,System.String@,System.String@,System.String@,System.String[]@,System.Decimal@,System.String@,System.Boolean@,System.Boolean@)">
            <summary>
            Constructor
            </summary>
            <param name="id">Unique product id.</param>
            <param name="productGroupId">Primary ProductGroup the product belongs to.</param>
            <param name="name">Name of the product.</param>
            <param name="description">Description of the product.</param>
            <param name="features">Product feature list.  This will be converted to a bullet list when displayed on a website.</param>
            <param name="videoLink">The url for a video link to the product if one exists.</param>
            <param name="images">List of images which represent the product.</param>
            <param name="retailPrice">Retail price of product.</param>
            <param name="sku">Unique product SKU.</param>
            <param name="isDownload">Indicates the product is downloadable.</param>
            <param name="allowBackorder">Indicates the product is allowed to be back ordered, if there is no stock available at the time of purchase.</param>
        </member>
        <member name="M:Middleware.Products.Product.#ctor(System.Int32@,System.Int32@,System.String@,System.String@,System.String@,System.String@,System.String[]@,System.Decimal@,System.String@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Constructor
            </summary>
            <param name="id">Unique product id.</param>
            <param name="productGroupId">Primary ProductGroup the product belongs to.</param>
            <param name="name">Name of the product.</param>
            <param name="description">Description of the product.</param>
            <param name="features">Product feature list.  This will be converted to a bullet list when displayed on a website.</param>
            <param name="videoLink">The url for a video link to the product if one exists.</param>
            <param name="images">List of images which represent the product.</param>
            <param name="retailPrice">Retail price of product.</param>
            <param name="sku">Unique product SKU.</param>
            <param name="isDownload">Indicates the product is downloadable.</param>
            <param name="allowBackorder">Indicates the product is allowed to be back ordered, if there is no stock available at the time of purchase.</param>
            <param name="isNew">Indicates the product is a new product.</param>
            <param name="isBestSeller">Indicates the product is a best selling product.</param>
        </member>
        <member name="M:Middleware.Products.Product.SetCurrentStockLevel(System.UInt32)">
            <summary>
            Sets the current stock availability for the product.
            </summary>
            <param name="currentStock"></param>
        </member>
        <member name="P:Middleware.Products.Product.Id">
            <summary>
            Unique product id.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Products.Product.ProductGroupId">
            <summary>
            Primary ProductGroup the product belongs to.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Products.Product.Name">
            <summary>
            Name of the product.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Products.Product.Description">
            <summary>
            Description of the product.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Products.Product.Features">
            <summary>
            Product feature list.  This will be converted to a bullet list when displayed on a website.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Products.Product.VideoLink">
            <summary>
            The url for a video linkt to the product if one exists.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Products.Product.Images">
            <summary>
            List of images which represent the product.
            </summary>
            <value>string[]</value>
        </member>
        <member name="P:Middleware.Products.Product.NewProduct">
            <summary>
            Indicates the product is a new product.
            </summary>
            <value>bool.  if true the product may have different display options on the website.</value>
        </member>
        <member name="P:Middleware.Products.Product.BestSeller">
            <summary>
            Indicates the product is a best selling product.
            </summary>
            <value>bool.  If true the product may have different display options on the website.</value>
        </member>
        <member name="P:Middleware.Products.Product.RetailPrice">
            <summary>
            Retail price of product.
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.Products.Product.Sku">
            <summary>
            Unique product SKU.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Products.Product.IsDownload">
            <summary>
            Indicates the product is downloadable.
            </summary>
            <value>bool</value>
        </member>
        <member name="P:Middleware.Products.Product.AllowBackorder">
            <summary>
            Indicates the product is allowed to be back ordered, if there is no stock available at the time of purchase.
            </summary>
            <value>bool.  If true the item can be back ordered.</value>
        </member>
        <member name="P:Middleware.Products.Product.StockAvailability">
            <summary>
            The quantity of stock available for the product.
            </summary>
            <value>uint.  Quantity of stock or zero.</value>
        </member>
        <member name="T:Middleware.Products.ProductGroup">
            <summary>
            Displays information for a product group within a website.
            </summary>
        </member>
        <member name="M:Middleware.Products.ProductGroup.#ctor(System.Int32@,System.String@,System.Boolean@,System.Int32@,System.String@,System.String@)">
            <summary>
            Constructor
            </summary>
            <param name="id">Unique id of product group.</param>
            <param name="description">Description for Product Group.</param>
            <param name="showOnWebsite">Determines whether the product group is visible on the website or not.</param>
            <param name="sortOrder">Sort order in comparison to other product groups.</param>
            <param name="tagLine">Tag line displayed at the top of the page when thr group is shown.</param>
            <param name="url">Custom url to be redirected to if the group is selected.  Default route values apply if not set.</param>
        </member>
        <member name="P:Middleware.Products.ProductGroup.Id">
            <summary>
            Unique id of product group.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Products.ProductGroup.Description">
            <summary>
            Description for Product Group.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Products.ProductGroup.ShowOnWebsite">
            <summary>
            Determines whether the product group is visible on the website or not.
            </summary>
            <value>bool.  If true the value is shown.</value>
        </member>
        <member name="P:Middleware.Products.ProductGroup.SortOrder">
            <summary>
            Sort order in comparison to other product groups.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Products.ProductGroup.TagLine">
            <summary>
            Tag line displayed at the top of the page when thr group is shown.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Products.ProductGroup.Url">
            <summary>
            Custom url to be redirected to if the group is selected.  Default route values apply if not set.
            </summary>
            <value>string</value>
        </member>
        <member name="T:Middleware.Search.AdvancedSearchOptions">
            <summary>
            Options that can be provided by Keyword search providers for advanced searching
            </summary>
        </member>
        <member name="M:Middleware.Search.AdvancedSearchOptions.#ctor(System.String@,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Constructor
            </summary>
            <param name="actionName">Name of the action used for advanced searching.</param>
            <param name="controllerName">Name of the controller used for advanced searching.</param>
            <param name="searchName">Route for default search options, to be displayed to center.</param>
            <param name="searchOption">Route for Search options if required, to be displayed on left column.</param>
            <param name="styleSheet">Optional style sheet that can be embedded on the search page for advanced searches.</param>
        </member>
        <member name="M:Middleware.Search.AdvancedSearchOptions.#ctor(System.String@,System.String@,System.String@)">
            <summary>
            Constructor
            </summary>
            <param name="actionName">Name of the action used for advanced searching.</param>
            <param name="controllerName">Name of the controller used for advanced searching.</param>
            <param name="searchName">Route for default search options, to be displayed to center.</param>
        </member>
        <member name="P:Middleware.Search.AdvancedSearchOptions.ActionName">
            <summary>
            Name of the action used for advanced searching.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Search.AdvancedSearchOptions.ControllerName">
            <summary>
            Name of the controller used for advanced searching.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Search.AdvancedSearchOptions.SearchOption">
            <summary>
            Route for Search options if required, to be displayed on left column.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Search.AdvancedSearchOptions.SearchName">
            <summary>
            Route for default search options, to be displayed to center.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Search.AdvancedSearchOptions.StyleSheet">
            <summary>
            Optional style sheet that can be embedded on the search page for advanced searches.
            </summary>
            <value>string</value>
        </member>
        <member name="T:Middleware.Search.BaseSearchOptions">
            <summary>
            Base options for completing searches
            </summary>
        </member>
        <member name="M:Middleware.Search.BaseSearchOptions.#ctor(System.Boolean@,System.String@)">
            <summary>
            Constructor
            </summary>
            <param name="isLoggedIn">Indicates that the search is being completed from a user who is logged in.</param>
            <param name="searchTerm">The search term being sought.</param>
        </member>
        <member name="P:Middleware.Search.BaseSearchOptions.IsLoggedIn">
            <summary>
            Indicates whether the search is being made from a logged in user or not.
            </summary>
            <value>bool</value>
        </member>
        <member name="P:Middleware.Search.BaseSearchOptions.SearchTerm">
            <summary>
            The search term being searched
            </summary>
            <value>string</value>
        </member>
        <member name="T:Middleware.Search.DefaultSearchThread">
            <summary>
            The default thread item to be used for performing searches
            </summary>
        </member>
        <member name="M:Middleware.Search.DefaultSearchThread.#ctor(System.Collections.Generic.List{Middleware.ISearchKeywordProvider}@,Middleware.Search.KeywordSearchOptions@)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Middleware.Search.DefaultSearchThread.SearchCache">
            <summary>
            Default search cache item
            </summary>
        </member>
        <member name="P:Middleware.Search.DefaultSearchThread.SearchTimings">
            <summary>
            Retrieves the timings for searches
            </summary>
            <value>Timings</value>
        </member>
        <member name="M:Middleware.Search.DefaultSearchThread.KeywordSearch(System.Collections.Generic.List{Middleware.ISearchKeywordProvider}@,Middleware.Search.KeywordSearchOptions@)">
            <summary>
            Default keyword search using the specified options and parameters.
            </summary>
            <param name="searchProviders">List of search providers to be searched.</param>
            <param name="keywordSearchOptions">Keyword search options</param>
            <returns>List&lt;SearchResponseItem&gt;</returns>
        </member>
        <member name="M:Middleware.Search.DefaultSearchThread.KeywordSearch(Middleware.ISearchKeywordProvider@,Middleware.Search.KeywordSearchOptions@)">
            <summary>
            Default keyword search using the specified options and parameters.
            </summary>
            <param name="searchProvider">Search providers to be searched.</param>
            <param name="keywordSearchOptions">Keyword search options</param>
            <returns>List&lt;SearchResponseItem&gt;</returns>
        </member>
        <member name="M:Middleware.Search.DefaultSearchThread.RetrieveSearch(System.String@)">
            <summary>
            Retrieve search data based on the name of the search, if it exists.
            </summary>
            <param name="searchName"></param>
            <returns>List&lt;SearchResponseItem&gt;</returns>
        </member>
        <member name="M:Middleware.Search.DefaultSearchThread.Run(System.Object)">
            <summary>
            Method that executes a search in a dedicated thread
            </summary>
            <param name="parameters"></param>
            <returns>bool</returns>
        </member>
        <member name="T:Middleware.Search.KeywordSearchOptions">
            <summary>
            Keyword search request
            </summary>
        </member>
        <member name="M:Middleware.Search.KeywordSearchOptions.#ctor(System.Boolean@,System.String@,System.Boolean@,System.Boolean@)">
            <summary>
            Constructor
            </summary>
            <param name="isLoggedIn">Indicates that the search is being completed from a user who is logged in.</param>
            <param name="searchTerm">The search term being sought.</param>
            <param name="quickSearch">Indicates a quick search should be completed, i.e. searching titles instead of biography etc.</param>
            <param name="exactMatch">Determines whether the search should be an exact match or not.</param>
        </member>
        <member name="M:Middleware.Search.KeywordSearchOptions.#ctor(System.Boolean@,System.String@,System.Boolean@)">
            <summary>
            Constructor
            </summary>
            <param name="isLoggedIn">Indicates that the search is being completed from a user who is logged in.</param>
            <param name="searchTerm">The search term being sought.</param>
            <param name="quickSearch">Indicates a quick search should be completed, i.e. searching titles instead of biography etc.</param>
        </member>
        <member name="M:Middleware.Search.KeywordSearchOptions.#ctor(System.String@,System.Boolean@)">
            <summary>
            Constructor
            </summary>
            <param name="searchTerm">The search term being sought.</param>
            <param name="quickSearch">Indicates a quick search should be completed, i.e. searching titles instead of biography etc.</param>
        </member>
        <member name="M:Middleware.Search.KeywordSearchOptions.#ctor(System.Boolean@,System.String@)">
            <summary>
            Constructor
            </summary>
            <param name="isLoggedIn">Indicates that the search is being completed from a user who is logged in.</param>
            <param name="searchTerm">The search term being sought.</param>
        </member>
        <member name="M:Middleware.Search.KeywordSearchOptions.#ctor(System.String@)">
            <summary>
            Constructor for logged out user
            </summary>
            <param name="searchTerm">The search term being sought.</param>
        </member>
        <member name="P:Middleware.Search.KeywordSearchOptions.Timeout">
            <summary>
            Timeout in milliseconds, if implemented then after the timeout period an error should be raised.
            </summary>
        </member>
        <member name="P:Middleware.Search.KeywordSearchOptions.PatternMatching">
            <summary>
            Indicates that searching should be based on pattern matching.
            </summary>
            <value>bool</value>
        </member>
        <member name="P:Middleware.Search.KeywordSearchOptions.Properties">
            <summary>
            Dictionary of properties, these are user defined on the premise that the writer of the propery will know.
            and check for it's type before using it.
            </summary>
            <value>Dictionary&lt;string, object&gt;</value>
        </member>
        <member name="P:Middleware.Search.KeywordSearchOptions.QuickSearch">
            <summary>
            Indicates that a quick search should be completed, this should be based on titles etc
            </summary>
            <value>bool</value>
        </member>
        <member name="P:Middleware.Search.KeywordSearchOptions.MaximumSearchResults">
            <summary>
            Maximum number of search results to be returned, default value is 100
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Search.KeywordSearchOptions.ExactMatch">
            <summary>
            Determines whether the search should be an exact match or not.
            </summary>
            <value>bool</value>
        </member>
        <member name="P:Middleware.Search.KeywordSearchOptions.SearchName">
            <summary>
            Name of the search prefix, this is used by other search providers who can create a search and prefix it so as to return afterwards
            </summary>
        </member>
        <member name="T:Middleware.Search.SearchResponse">
            <summary>
            Base search response
            </summary>
        </member>
        <member name="M:Middleware.Search.SearchResponse.#ctor(System.Boolean@,System.String@)">
            <summary>
            Constructor
            </summary>
            <param name="isLoggedIn">Indicates that the search is being completed from a user who is logged in.</param>
            <param name="searchTerm">The search term being sought.</param>
        </member>
        <member name="P:Middleware.Search.SearchResponse.SearchResults">
            <summary>
            List of search results
            </summary>
        </member>
        <member name="T:Middleware.Search.SearchResponseItem">
            <summary>
            Search response for all search types.
            </summary>
        </member>
        <member name="M:Middleware.Search.SearchResponseItem.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Middleware.Search.SearchResponseItem.#ctor(System.String@,System.String@)">
            <summary>
            Constructor
            </summary>
            <param name="responseType">User defined response type, i.e. document, webpage, product, tag etc.</param>
            <param name="response">The response word or phrase.</param>
        </member>
        <member name="M:Middleware.Search.SearchResponseItem.#ctor(System.String@,System.String@,System.Int32@,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="responseType">User defined response type, i.e. document, webpage, product, tag etc.</param>
            <param name="response">The response word or phrase.</param>
            <param name="offset">The offset within response where the search term was found, if relevant.</param>
            <param name="displayName">Name that will be displayed with the search result url, should no custom view be supplied.</param>
        </member>
        <member name="M:Middleware.Search.SearchResponseItem.#ctor(System.String@,System.String@,System.Int32@,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="responseType">User defined response type, i.e. document, webpage, product, tag etc.</param>
            <param name="response">The response word or phrase.</param>
            <param name="offset">The offset within response where the search term was found, if relevant.</param>
            <param name="url">If the search returns a url it will be made into a uri otherwise left null.</param>
            <param name="displayName">Name that will be displayed with the search result url, should no custom view be supplied.</param>
            <param name="viewName">Name and path of the view that will display search results</param>
        </member>
        <member name="P:Middleware.Search.SearchResponseItem.ResponseType">
            <summary>
            User defined response type i.e. document, webpage, product, tag etc.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Search.SearchResponseItem.Response">
            <summary>
            Response from search result.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Search.SearchResponseItem.Offset">
            <summary>
            The offset within response where the search term was found, if relevant.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Search.SearchResponseItem.Url">
            <summary>
            Url, if provided, returned by the search provider.  If this value is null then the host has to determine how
            the search result can be viewed in the host application probably based on the ResponseType
            </summary>
            <value>Uri</value>
        </member>
        <member name="P:Middleware.Search.SearchResponseItem.Properties">
            <summary>
            Dictionary of properties, these are user defined on the premise that the writer of the propery will know.
            and check for it's type before using it.
            </summary>
            <value>Dictionary&lt;string, object&gt;</value>
        </member>
        <member name="P:Middleware.Search.SearchResponseItem.Relevance">
            <summary>
            Indicates the relevance of the search item in relation to the search
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.Search.SearchResponseItem.ViewName">
            <summary>
            Name of the view that will be used to display the search results
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.Search.SearchResponseItem.DisplayName">
            <summary>
            Name that will be displayed with the search result url, should no custom view be supplied.
            </summary>
        </member>
        <member name="M:Middleware.Search.SearchResponseItem.HighlightKeywords(System.Int32@)">
            <summary>
            Highlights the keyword search
            </summary>
            <param name="keywordLength">Length of keyword being searched.</param>
        </member>
        <member name="T:Middleware.ShoppingCart.ShoppingCartDetail">
            <summary>
            Provides detailed information about shopping a users shopping cart.  Descends from ShoppingCartSummary
            and is used with IShoppingCartProvider and ShoppingCart.Plugin module.
            </summary>
        </member>
        <member name="M:Middleware.ShoppingCart.ShoppingCartDetail.#ctor(System.Int64@,System.Int32@,System.Decimal@,System.Decimal@,System.Decimal@,System.Decimal@,System.Globalization.CultureInfo@,System.String@,System.Collections.Generic.List{Middleware.ShoppingCart.ShoppingCartItem}@,System.Boolean@,System.String@)">
            <summary>
            Constructor
            </summary>
            <param name="id">Unique id of the shopping cart.</param>
            <param name="totalItems">Total number of items within the shopping cart.</param>
            <param name="totalCost">Total cost of the shopping cart.</param>
            <param name="taxRate">Tax rate applied to the shopping cart.</param>
            <param name="shipping">Shipping rate for the shopping cart.</param>
            <param name="discount">Discount that has been applied to the shopping cart.</param>
            <param name="culture">Culture that has been used for the shopping cart.</param>
            <param name="couponCode">Coupon code that has been applied to the shopping cart.</param>
            <param name="items">List of items within the shopping cart.</param>
            <param name="requiresShipping">Indicates that the cart has items that need shipping.</param>
            <param name="currencyCode">Currency code for the shopping cart.</param>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartDetail.CouponCode">
            <summary>
            Coupon code that has been applied to the shopping cart.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartDetail.Items">
            <summary>
            List of all items within the shopping cart.
            </summary>
            <value>List&lt;ShoppingCartItems&gt;</value>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartDetail.RequiresShipping">
            <summary>
            Determines whether the cart contains items that require shipping.
            </summary>
            <value>bool.  True if items require shipping.</value>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartDetail.DeliveryAddressId">
            <summary>
            Unique delivery address for the users, where the products will be shipped to.
            </summary>
            <value>int</value>
        </member>
        <member name="M:Middleware.ShoppingCart.ShoppingCartDetail.Add(Middleware.Products.Product@,System.Int32@)">
            <summary>
            Adds a new product to the shopping cart.
            </summary>
            <param name="product">Product to be added to the cart.</param>
            <param name="count">Quantity to be added to the cart.</param>
        </member>
        <member name="M:Middleware.ShoppingCart.ShoppingCartDetail.Update(System.Int32,System.Int32)">
            <summary>
            Updates the quantity for a specific product within the shopping cart.
            </summary>
            <param name="productId">Unique id of the product to be updated.</param>
            <param name="count">New quantity to be applied to the Product.</param>
        </member>
        <member name="M:Middleware.ShoppingCart.ShoppingCartDetail.Delete(System.Int32)">
            <summary>
            Deletes a product from the shopping cart.
            </summary>
            <param name="productId">Unique id of the product to be deleted.</param>
        </member>
        <member name="M:Middleware.ShoppingCart.ShoppingCartDetail.Reset">
            <summary>
            Resets the total cost and item count of all items within the cart.
            </summary>
        </member>
        <member name="M:Middleware.ShoppingCart.ShoppingCartDetail.SetDeliveryAddress(Middleware.Address@)">
            <summary>
            Sets the delivery address for the shopping cart, this is typically completed during the checkout phase.
            </summary>
            <param name="address">Address the user wants the cart shipping to.</param>
        </member>
        <member name="T:Middleware.ShoppingCart.ShoppingCartItem">
            <summary>
            Provides details shopping cart item data.
            </summary>
        </member>
        <member name="M:Middleware.ShoppingCart.ShoppingCartItem.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Middleware.ShoppingCart.ShoppingCartItem.#ctor(System.Int32@,System.Decimal@,System.Decimal@,System.String@,System.String@,System.String@,System.String[]@,System.Boolean@,System.Boolean@,System.String@)">
            <summary>
            Constructor containing detailed items information.
            </summary>
            <param name="id">Unique id of shopping cart.</param>
            <param name="itemCount">Number of items in the cart.</param>
            <param name="itemCost">Cost of the items within shopping cart.</param>
            <param name="name">Name of the item within the shopping cart.</param>
            <param name="description">Description of item within the cart</param>
            <param name="sku">SKU of item.</param>
            <param name="images">Images associated with the item.</param>
            <param name="isDownload">Indicates that the item is downloadable or not.</param>
            <param name="canBackOrder">Indicates that the item is on back order.</param>
            <param name="size">Size of item.</param>
        </member>
        <member name="M:Middleware.ShoppingCart.ShoppingCartItem.#ctor(System.Int32@,System.Decimal@,System.Decimal@,System.Decimal@,System.String@,System.String@,System.String@,System.String[]@,System.Boolean@,System.Int32@,System.String@,System.Boolean@,System.String@)">
            <summary>
            Constructor containing all detailed item information.
            </summary>
            <param name="id">Unique id of shopping cart.</param>
            <param name="itemCount">Number of items in the cart.</param>
            <param name="itemCost">Cost of the items within shopping cart.</param>
            <param name="taxRate">Tax rate applied to the item.</param>
            <param name="name">Name of the item within the shopping cart.</param>
            <param name="description">Description of item within the cart</param>
            <param name="sku">SKU of item.</param>
            <param name="images">Images associated with the item.</param>
            <param name="isDownload">Indicates that the item is downloadable or not.</param>
            <param name="weight">Weight of item in grams.</param>
            <param name="customerReference"></param>
            <param name="canBackOrder">Indicates that the item is on back order.</param>
            <param name="size">Size of item.</param>
        </member>
        <member name="M:Middleware.ShoppingCart.ShoppingCartItem.UpdateCount(System.Int32@)">
            <summary>
            Update the count of the individual item by adding more.
            </summary>
            <param name="count">Count to be added to existing count.</param>
        </member>
        <member name="M:Middleware.ShoppingCart.ShoppingCartItem.ResetCount(System.Int32@)">
            <summary>
            Resets the total count to a new value
            </summary>
            <param name="count">Count of item within cart.</param>
        </member>
        <member name="M:Middleware.ShoppingCart.ShoppingCartItem.SetCurrentStockLevel(System.UInt32@)">
            <summary>
            Sets the stock availability for an item within the shopping cart.
            </summary>
            <param name="stockavailability">Current stock availability for the item.</param>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartItem.Id">
            <summary>
            Unique id of the shopping cart item.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartItem.ItemCount">
            <summary>
            Number of items.
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartItem.ItemCost">
            <summary>
            Cost of the item.
            </summary>
            <value></value>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartItem.TaxRate">
            <summary>
            Rate of tax applied to the item.
            </summary>
            <value>decimal</value>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartItem.Name">
            <summary>
            Name of the item.
            </summary>
            <string>string</string>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartItem.Description">
            <summary>
            Description of the item.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartItem.SKU">
            <summary>
            Item SKU
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartItem.Images">
            <summary>
            Images for the item
            </summary>
            <value>string[]</value>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartItem.IsDownload">
            <summary>
            Indicates that the item is downloadable or not.
            </summary>
            <value>bool</value>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartItem.Weight">
            <summary>
            Weight of item in grams.
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartItem.CustomerReference">
            <summary>
            Customer reference for the item in the cart.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartItem.CanBackOrder">
            <summary>
            Indicates that the item can be backordered.
            </summary>
            <value>bool</value>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartItem.Size">
            <summary>
            Size or dimensions of the item.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.ShoppingCart.ShoppingCartItem.StockAvailability">
            <summary>
            Availability of stock for the item in the shopping cart.
            </summary>
        </member>
        <member name="T:Middleware.Users.SearchUser">
            <summary>
            Class used to return results for user searches.
            </summary>
        </member>
        <member name="M:Middleware.Users.SearchUser.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Middleware.Users.SearchUser.#ctor(System.Int64@,System.String@,System.String@)">
            <summary>
            Constructor
            </summary>
            <param name="id">Id of user.</param>
            <param name="name">Name of user.</param>
            <param name="email">Email address for user.</param>
        </member>
        <member name="P:Middleware.Users.SearchUser.Id">
            <summary>
            Unique id for the user.
            </summary>
        </member>
        <member name="P:Middleware.Users.SearchUser.Name">
            <summary>
            Name of the user.
            </summary>
        </member>
        <member name="P:Middleware.Users.SearchUser.Email">
            <summary>
            Email for the user.
            </summary>
        </member>
        <member name="T:Middleware.Constants">
            <summary>
            Constant values used by PluginMiddleware
            </summary>
        </member>
        <member name="F:Middleware.Constants.CaptchaCharacters">
            <summary>
            Captcha characters that will be used to generate captcha requests.
            </summary>
            <value>string</value>
        </member>
        <member name="F:Middleware.Constants.PaymentProviderCashOnDelivery">
            <summary>
            Cash on delivery payment provider.
            </summary>
            <value>string</value>
        </member>
        <member name="F:Middleware.Constants.PaymentProviderClickAndCollect">
            <summary>
            Click and collect payment provider.
            </summary>
            <value>string</value>
        </member>
        <member name="F:Middleware.Constants.PaymentProviderCheque">
            <summary>
            Cheque payment provider.
            </summary>
            <value>string</value>
        </member>
        <member name="F:Middleware.Constants.PaymentProviderDirectTransfer">
            <summary>
            Direct bank transfer payment provider.
            </summary>
            <value>string</value>
        </member>
        <member name="F:Middleware.Constants.PaymentProviderPayflow">
            <summary>
            Payflow payment provider.
            </summary>
            <value>string</value>
        </member>
        <member name="F:Middleware.Constants.PaymentProviderPaypoint">
            <summary>
            Paypoint payment provider.
            </summary>
            <value>string</value>
        </member>
        <member name="F:Middleware.Constants.PaymentProviderPhone">
            <summary>
            Phone payment provider.
            </summary>
            <value>string</value>
        </member>
        <member name="F:Middleware.Constants.PaymentProviderSunTech24Payment">
            <summary>
            SunTech24 payment provider.
            </summary>
            <value>string</value>
        </member>
        <member name="F:Middleware.Constants.PaymentProviderNone">
            <summary>
            No payment providers configured.
            </summary>
            <value>string</value>
        </member>
        <member name="F:Middleware.Constants.PaymentProviderNotFound">
            <summary>
            Invalid payment provider.
            </summary>
            <value>string</value>
        </member>
        <member name="T:Middleware.LoginResult">
            <summary>
            Login results
            </summary>
        </member>
        <member name="F:Middleware.LoginResult.Success">
            <summary>
            Login was successfull.
            </summary>
        </member>
        <member name="F:Middleware.LoginResult.InvalidCredentials">
            <summary>
            Invalid credentials provided.
            </summary>
        </member>
        <member name="F:Middleware.LoginResult.AccountLocked">
            <summary>
            Account is locked.
            </summary>
        </member>
        <member name="F:Middleware.LoginResult.PasswordChangeRequired">
            <summary>
            Password change is required.
            </summary>
        </member>
        <member name="F:Middleware.LoginResult.Remembered">
            <summary>
            Login details were remembered, Login was successfull.
            </summary>
        </member>
        <member name="T:Middleware.AddressOption">
            <summary>
            Address Option
            </summary>
        </member>
        <member name="F:Middleware.AddressOption.Delivery">
            <summary>
            Delivery Address Option
            </summary>
        </member>
        <member name="F:Middleware.AddressOption.Billing">
            <summary>
            Billing Address Option
            </summary>
        </member>
        <member name="T:Middleware.AddressOptions">
            <summary>
            Address options
            </summary>
        </member>
        <member name="F:Middleware.AddressOptions.BusinessNameShow">
            <summary>
            Determines wether to show the business name or not
            </summary>
        </member>
        <member name="F:Middleware.AddressOptions.BusinessNameMandatory">
            <summary>
            Determines wether Business Name is mandatory
            </summary>
        </member>
        <member name="F:Middleware.AddressOptions.AddressLine1Show">
            <summary>
            Determines wether AddressLine 1 is shown or not
            </summary>
        </member>
        <member name="F:Middleware.AddressOptions.AddressLine1Mandatory">
            <summary>
            Determines wether AddressLine1 is mandatory or not
            </summary>
        </member>
        <member name="F:Middleware.AddressOptions.AddressLine2Show">
            <summary>
            Determines wether AddressLine 2 is shown or not
            </summary>
        </member>
        <member name="F:Middleware.AddressOptions.AddressLine2Mandatory">
            <summary>
            Determines wether AddressLine2 is mandatory or not
            </summary>
        </member>
        <member name="F:Middleware.AddressOptions.AddressLine3Show">
            <summary>
            Determines wether AddressLine 3 is shown or not
            </summary>
        </member>
        <member name="F:Middleware.AddressOptions.AddressLine3Mandatory">
            <summary>
            Determines wether AddressLine1 is mandatory or not
            </summary>
        </member>
        <member name="F:Middleware.AddressOptions.CityShow">
            <summary>
            Determines wether to show city data or not
            </summary>
        </member>
        <member name="F:Middleware.AddressOptions.CityMandatory">
            <summary>
            Determines wether City is mandatory or not
            </summary>
        </member>
        <member name="F:Middleware.AddressOptions.CountyShow">
            <summary>
            Determines wether to show county or not
            </summary>
        </member>
        <member name="F:Middleware.AddressOptions.CountyMandatory">
            <summary>
            Determines wether County is mandatory or not
            </summary>
        </member>
        <member name="F:Middleware.AddressOptions.PostCodeShow">
            <summary>
            Determines wether to show the postcode or not
            </summary>
        </member>
        <member name="F:Middleware.AddressOptions.PostCodeMandatory">
            <summary>
            Determines wether post code is mandatory or not
            </summary>
        </member>
        <member name="F:Middleware.AddressOptions.TelephoneShow">
            <summary>
            Determines wether telephone number is shown
            </summary>
        </member>
        <member name="F:Middleware.AddressOptions.TelephoneMandatory">
            <summary>
            Determines wether telephone is a mandatory field
            </summary>
        </member>
        <member name="T:Middleware.MarketingOptions">
            <summary>
            Marketing Optons
            </summary>
        </member>
        <member name="F:Middleware.MarketingOptions.ShowEmail">
            <summary>
            Show email marketing check box.
            </summary>
        </member>
        <member name="F:Middleware.MarketingOptions.ShowTelephone">
            <summary>
            Show telephone marketing check box.
            </summary>
        </member>
        <member name="F:Middleware.MarketingOptions.ShowSMS">
            <summary>
            Show sms marketing check box.
            </summary>
        </member>
        <member name="F:Middleware.MarketingOptions.ShowPostal">
            <summary>
            Show postal marketing check box.
            </summary>
        </member>
        <member name="T:Middleware.ProcessStatus">
            <summary>
            Invoice and Order Process Status
            </summary>
        </member>
        <member name="F:Middleware.ProcessStatus.OrderReceived">
            <summary>
            Order is in received status.
            </summary>
        </member>
        <member name="F:Middleware.ProcessStatus.FraudCheck">
            <summary>
            Order is being processed for fraud.
            </summary>
        </member>
        <member name="F:Middleware.ProcessStatus.PaymentCheck">
            <summary>
            Payment is being verified.
            </summary>
        </member>
        <member name="F:Middleware.ProcessStatus.Processing">
            <summary>
            Order is being processed for dispatch.
            </summary>
        </member>
        <member name="F:Middleware.ProcessStatus.Dispatched">
            <summary>
            Order has been dispatched.
            </summary>
        </member>
        <member name="F:Middleware.ProcessStatus.IssueRefund">
            <summary>
            Order is having a refund processed.
            </summary>
        </member>
        <member name="F:Middleware.ProcessStatus.PaymentPending">
            <summary>
            Payment is pending.
            </summary>
        </member>
        <member name="F:Middleware.ProcessStatus.OnHold">
            <summary>
            Order is on hold.
            </summary>
        </member>
        <member name="F:Middleware.ProcessStatus.Cancelled">
            <summary>
            Order has been cancelled.
            </summary>
        </member>
        <member name="T:Middleware.PaymentStatus">
            <summary>
            Order / Invoice Payment Status
            </summary>
        </member>
        <member name="F:Middleware.PaymentStatus.Unpaid">
            <summary>
            Invoice/order has not been paid.
            </summary>
        </member>
        <member name="F:Middleware.PaymentStatus.Paid">
            <summary>
            Invoice/order has been paid.
            </summary>
        </member>
        <member name="F:Middleware.PaymentStatus.PaidCash">
            <summary>
            Invoice/order has been paid using cash.
            </summary>
        </member>
        <member name="F:Middleware.PaymentStatus.PaidCheque">
            <summary>
            Invoice/order has been paid using checkque.
            </summary>
        </member>
        <member name="F:Middleware.PaymentStatus.PaidCard">
            <summary>
            Invoice/order has been paid using a credit/debit card.
            </summary>
        </member>
        <member name="F:Middleware.PaymentStatus.PaidVoucher">
            <summary>
            Invoice/order has been paid using a voucher.
            </summary>
        </member>
        <member name="F:Middleware.PaymentStatus.PaidMixed">
            <summary>
            Invoice/order has been paid using mixed payment types.
            </summary>
        </member>
        <member name="T:Middleware.ItemStatus">
            <summary>
            Invoice / Order Item Status
            </summary>
        </member>
        <member name="F:Middleware.ItemStatus.Received">
            <summary>
            Invoice/order item has been received.
            </summary>
        </member>
        <member name="F:Middleware.ItemStatus.Processing">
            <summary>
            Invoice/order item is being processed.
            </summary>
        </member>
        <member name="F:Middleware.ItemStatus.Dispatched">
            <summary>
            Invoice/order item has been dispatched.
            </summary>
        </member>
        <member name="F:Middleware.ItemStatus.OnHold">
            <summary>
            Invoice/order item is on hold.
            </summary>
        </member>
        <member name="F:Middleware.ItemStatus.BackOrder">
            <summary>
            Invoice/order item is on back order.
            </summary>
        </member>
        <member name="F:Middleware.ItemStatus.Cancelled">
            <summary>
            Invoice/order item has been cancelled.
            </summary>
        </member>
        <member name="T:Middleware.DiscountType">
            <summary>
            Type of discount that has been applied to an Invoice/Order
            </summary>
        </member>
        <member name="F:Middleware.DiscountType.None">
            <summary>
            Invoice/Order has no discount.
            </summary>
        </member>
        <member name="F:Middleware.DiscountType.PercentageTotal">
            <summary>
            Invoice/Order has a percentage discount on the total.
            </summary>
        </member>
        <member name="F:Middleware.DiscountType.PercentageSubTotal">
            <summary>
            Invoice/Order has a percentage discount on the sub total.
            </summary>
        </member>
        <member name="F:Middleware.DiscountType.Value">
            <summary>
            Invoice/Order has a monetary value discount (i.e. GBP10)
            </summary>
        </member>
        <member name="T:Middleware.LicenceCreate">
            <summary>
            Licence creation results.
            </summary>
        </member>
        <member name="F:Middleware.LicenceCreate.Success">
            <summary>
            Licence was successfully created.
            </summary>
        </member>
        <member name="F:Middleware.LicenceCreate.Existing">
            <summary>
            Licence already exists.
            </summary>
        </member>
        <member name="F:Middleware.LicenceCreate.Failed">
            <summary>
            Failed to create a licence.
            </summary>
        </member>
        <member name="T:Middleware.IApplicationProvider">
            <summary>
            Application provider interface provides application wide methods that can be used from
            any plugin module within the website.
            
            This item must be implemented by the host application and made available via DI.
            </summary>
        </member>
        <member name="M:Middleware.IApplicationProvider.Email(System.String@,System.String@)">
            <summary>
            Send an email to site administrators.
            </summary>
            <param name="subject">Subject of email.</param>
            <param name="message">Message</param>
        </member>
        <member name="T:Middleware.IBlogProvider">
            <summary>
            IBlogProvider interface provides methods used to manage blog posts.
            
            This interface must be implemented by the host application and made available via DI.
            </summary>
        </member>
        <member name="M:Middleware.IBlogProvider.GetRecentPosts(System.Int32@,System.Boolean@)">
            <summary>
            Returns the most recent blog entries
            </summary>
            <param name="recentCount">Number of recent entries to return.</param>
            <param name="publishedOnly">If true only returns published posts.</param>
            <returns>List&lt;BlogItem&gt;</returns>
        </member>
        <member name="M:Middleware.IBlogProvider.GetBlog(System.Int32@)">
            <summary>
            Retrieves an individual blog entry.
            </summary>
            <param name="id"></param>
            <returns>BlogItem</returns>
        </member>
        <member name="M:Middleware.IBlogProvider.GetMyBlogs(System.Int64@)">
            <summary>
            Retrieves all blogs for a specific user.
            </summary>
            <param name="userId">Id of user who's blog posts will be returned.</param>
            <returns>List&lt;BlogItem&gt;</returns>
        </member>
        <member name="M:Middleware.IBlogProvider.Search(System.String@)">
            <summary>
            Searches all blog items for blogs with a specific tag name.
            </summary>
            <param name="tagName">Name of tag to be searched for.</param>
            <returns>List&lt;BlogItem&gt;</returns>
        </member>
        <member name="M:Middleware.IBlogProvider.SaveBlog(Middleware.Blog.BlogItem@)">
            <summary>
            Saves a blog entry.
            </summary>
            <param name="blogItem">Blog entry to be saved.</param>
        </member>
        <member name="M:Middleware.IBlogProvider.AddComment(Middleware.Blog.BlogItem@,Middleware.Blog.BlogComment@,System.Int64@,System.String@,System.String@)">
            <summary>
            Adds a comment to a blog.
            </summary>
            <param name="blogItem">Blog that will have a comment added to.</param>
            <param name="parentComment">The parent comment for nested comments.</param>
            <param name="userId">Id of the user making the comment.</param>
            <param name="userName">Name of the user making the comment.</param>
            <param name="comment">Comment to be added.</param>
        </member>
        <member name="T:Middleware.ICountryProvider">
            <summary>
            Provides country data used throughout the website.
            
            This item must be implemented by the host application and made available via DI.
            </summary>
        </member>
        <member name="M:Middleware.ICountryProvider.GetAllCountries">
            <summary>
            Retrieve all countries.
            </summary>
            <returns>List&lt;Country&gt;</returns>
        </member>
        <member name="M:Middleware.ICountryProvider.GetVisibleCountries">
            <summary>
            Retrieve a list of all visible (available) countries.
            </summary>
            <returns>List&lt;Country&gt;</returns>
        </member>
        <member name="M:Middleware.ICountryProvider.CountryUpdate(Middleware.Country@)">
            <summary>
            Update a country.
            </summary>
            <param name="country">Country to be updated.</param>
            <returns>bool.  True if the country was updated.</returns>
        </member>
        <member name="M:Middleware.ICountryProvider.CountryDelete(Middleware.Country@)">
            <summary>
            Deletes a country.
            </summary>
            <param name="country">Country to be deleted.</param>
            <returns>bool.  True if the country has been deleted.</returns>
        </member>
        <member name="M:Middleware.ICountryProvider.CountryCreate(System.String@,System.String@,System.Boolean@)">
            <summary>
            Create a country.
            </summary>
            <param name="name">Name of country.</param>
            <param name="code">Country code.</param>
            <param name="visible">bool.  Determines whether the country is visible or not.</param>
            <returns>Country</returns>
        </member>
        <member name="T:Middleware.IDownloadProvider">
            <summary>
            Download provider.  Provides download information used by the DownloadPlugin module.
            
            This item must be implemented by the host application and made available via DI.
            </summary>
        </member>
        <member name="M:Middleware.IDownloadProvider.DownloadCategoriesGet(System.Int64@)">
            <summary>
            User download file Categories
            </summary>
            <param name="userId">Id of the user requesting a download, if they are logged in.</param>
            <returns>List&lt;DownloadCategory&gt;</returns>
        </member>
        <member name="M:Middleware.IDownloadProvider.DownloadCategoriesGet">
            <summary>
            Publicy downloadable file Categories
            </summary>
            <returns>List&lt;DownloadCategory&gt;</returns>
        </member>
        <member name="M:Middleware.IDownloadProvider.GetDownloadItem(System.Int32@)">
            <summary>
            Retrieve File
            </summary>
            <param name="fileId">Unique id of the file being downloaded.</param>
            <returns>DownloadItem</returns>
        </member>
        <member name="M:Middleware.IDownloadProvider.GetDownloadItem(System.Int64@,System.Int32@)">
            <summary>
            Retrieve File
            </summary>
            <param name="userId">Id of the user requesting a download, if they are logged in.</param>
            <param name="fileId">Unique id of the file being downloaded.</param>
            <returns>DownloadItem</returns>
        </member>
        <member name="M:Middleware.IDownloadProvider.ItemDownloaded(System.Int64@,System.Int32@)">
            <summary>
            File download by a user
            </summary>
            <param name="userId">Id of the user requesting a download, if they are logged in.</param>
            <param name="fileId">Unique id of the file being downloaded.</param>
        </member>
        <member name="M:Middleware.IDownloadProvider.ItemDownloaded(System.Int32@)">
            <summary>
            File download by anyone
            </summary>
            <param name="fileId">Unique id of the file being downloaded.</param>
        </member>
        <member name="T:Middleware.IDynamicContentPage">
            <summary>
            Interface for dynamic content page
            </summary>
        </member>
        <member name="P:Middleware.IDynamicContentPage.Id">
            <summary>
            Unique page id
            </summary>
            <value>int</value>
        </member>
        <member name="P:Middleware.IDynamicContentPage.Name">
            <summary>
            Name of dynamic page
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.IDynamicContentPage.ActiveFrom">
            <summary>
            Date and time the page becomes active
            </summary>
            <value>DateTime</value>
        </member>
        <member name="P:Middleware.IDynamicContentPage.ActiveTo">
            <summary>
            Date and time the page expires
            </summary>
            <value>DateTime</value>
        </member>
        <member name="P:Middleware.IDynamicContentPage.RouteName">
            <summary>
            Route name that will form part of the Uri
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.IDynamicContentPage.BackgroundColor">
            <summary>
            Color of background, default is white.  Defined as hex color
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.IDynamicContentPage.BackgroundImage">
            <summary>
            Uri for image for background, this will be stretched across entire page.
            </summary>
            <value>string</value>
        </member>
        <member name="P:Middleware.IDynamicContentPage.Content">
            <summary>
            Dynamic content that will be displayed within the page
            </summary>
            <value>List&lt;DynamicContentTemplate&gt;</value>
        </member>
        <member name="T:Middleware.Interfaces.IImageProvider">
            <summary>
            Image provider interface, provides methods used to manage images within the system
            </summary>
        </member>
        <member name="M:Middleware.Interfaces.IImageProvider.CreateGroup(System.String)">
            <summary>
            Creates an image group, an image group will logically co-locate images which are naturally grouped.
            </summary>
            <param name="groupName">Name of group to create</param>
            <exception cref="T:System.ArgumentNullException">Thrown if groupName is null or an empty string.</exception>
            <returns>bool</returns>
        </member>
        <member name="M:Middleware.Interfaces.IImageProvider.DeleteGroup(System.String)">
            <summary>
            Deletes an image group.
            </summary>
            <param name="groupName">Name of group to delete.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if groupName is null or an empty string.</exception>
            <returns>bool</returns>
        </member>
        <member name="M:Middleware.Interfaces.IImageProvider.GroupExists(System.String)">
            <summary>
            Determines whether a group exists or not
            </summary>
            <param name="groupName">Name of group to find if exists</param>
            <returns>bool</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if groupName is null or an empty string.</exception>
        </member>
        <member name="M:Middleware.Interfaces.IImageProvider.Groups">
            <summary>
            Retrieves a list of available image groups with subgroups
            </summary>
            <returns>Dictionary&lt;string, List&lt;string&gt;&gt;</returns>
        </member>
        <member name="M:Middleware.Interfaces.IImageProvider.Images(System.String)">
            <summary>
            Retrieves a list of all images within an image group
            </summary>
            <param name="groupName">Name of group where images will be retrieved from.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if groupName is null or an empty string.</exception>
            <returns>List&lt;ImageFile&gt;</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if groupName is null or an empty string.</exception>
        </member>
        <member name="M:Middleware.Interfaces.IImageProvider.Images(System.String,System.String)">
            <summary>
            Retrieves a list of all images within an image subgroup
            </summary>
            <param name="groupName">Name of group where images will be retrieved from.</param>
            <param name="subgroupName">Name of subgroup where images will be retrieved from.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if groupName is null or an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if subgroupName is null or an empty string.</exception>
            <returns>List&lt;ImageFile&gt;</returns>
        </member>
        <member name="M:Middleware.Interfaces.IImageProvider.ImageExists(System.String,System.String)">
            <summary>
            Determines whether an image exists within a group
            </summary>
            <param name="groupName">Name of group where images will be found.</param>
            <param name="imageName">Name of image</param>
            <returns>bool</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if groupName is null or an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if subgroupName is null or an empty string.</exception>
        </member>
        <member name="M:Middleware.Interfaces.IImageProvider.ImageExists(System.String,System.String,System.String)">
            <summary>
            Determines whether an image exists within a subgroup
            </summary>
            <param name="groupName">Name of group where images will be found.</param>
            <param name="subgroupName">Name of subgroup where image will be found.</param>
            <param name="imageName">Name of image</param>
            <returns>bool</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if groupName is null or an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if subgroupName is null or an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if imageName is null or an empty string.</exception>
        </member>
        <member name="M:Middleware.Interfaces.IImageProvider.ImageDelete(System.String,System.String)">
            <summary>
            Deletes an image from within a group
            </summary>
            <param name="groupName">Name of group where images will be found.</param>
            <param name="imageName">Name of image</param>
            <returns>bool</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if groupName is null or an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if imageName is null or an empty string.</exception>
        </member>
        <member name="M:Middleware.Interfaces.IImageProvider.ImageDelete(System.String,System.String,System.String)">
            <summary>
            Deletes an image from within a subgroup
            </summary>
            <param name="groupName">Name of group where images will be found.</param>
            <param name="subgroupName">Name of subgroup where image will be found.</param>
            <param name="imageName">Name of image</param>
            <returns>bool</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if groupName is null or an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if subgroupName is null or an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if imageName is null or an empty string.</exception>
        </member>
        <member name="M:Middleware.Interfaces.IImageProvider.SubgroupExists(System.String,System.String)">
            <summary>
            Determines whether a subgroup exists or not
            </summary>
            <param name="groupName">Name of group that should contain subgroup.</param>
            <param name="subgroupName">Name of subgroup whose existence is being verified.</param>
            <returns>bool</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if groupName is null or an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if subgroupName is null or an empty string.</exception>
        </member>
        <member name="M:Middleware.Interfaces.IImageProvider.AddSubgroup(System.String,System.String)">
            <summary>
            Adds a new subgroup to an existing image group
            </summary>
            <param name="groupName">Name of group under which the subgroup will be added.</param>
            <param name="subgroupName">Name of subgroup to add.</param>
            <returns>bool</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if groupName is null or an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if subgroupName is null or an empty string.</exception>
        </member>
        <member name="M:Middleware.Interfaces.IImageProvider.DeleteSubgroup(System.String,System.String)">
            <summary>
            Deletes a subgroup and all image files contained within the subgroup.
            </summary>
            <param name="groupName">Name of group where the subgroup resides.</param>
            <param name="subgroupName">Name of subgroup to be deleted.</param>
            <returns>bool</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if groupName is null or an empty string.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if subgroupName is null or an empty string.</exception>
        </member>
        <member name="M:Middleware.Interfaces.IImageProvider.TemporaryImageFile(System.String)">
            <summary>
            Retreives the name of a file which can be used for temporary storage of image files
            </summary>
            <param name="fileExtension">File extension to be used for new file</param>
            <returns>string</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if fileExtension is null or empty</exception>
            <exception cref="T:System.ArgumentException">Thrown if fileExtension does not start with a period (.)</exception>
        </member>
        <member name="M:Middleware.Interfaces.IImageProvider.AddFile(System.String,System.String,System.String,System.Byte[])">
            <summary>
            Adds a file to the specific group or subgroup
            </summary>
            <param name="groupName">Name of group</param>
            <param name="subgroupName">Name of subgroup or null if not applicable</param>
            <param name="fileName">Name of file to be saved</param>
            <param name="fileContents">Contents of file</param>
            <exception cref="T:System.ArgumentNullException">Thrown if groupName is null or empty.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if fileName is null or empty.</exception>
            <exception cref="T:System.ArgumentException">Thrown if fileContents length is 0</exception>
        </member>
        <member name="T:Middleware.ILicenceProvider">
            <summary>
            Licence provider for managing user licences.
            
            This item must be implemented by the host application and made available via DI.
            </summary>
        </member>
        <member name="M:Middleware.ILicenceProvider.LicenceTypesGet">
            <summary>
            Retrieves a list of licence types.
            </summary>
            <returns>List&lt;LicenceType&gt;</returns>
        </member>
        <member name="M:Middleware.ILicenceProvider.LicencesGet(System.Int64@)">
            <summary>
            Retrieve all licences for a specific user.
            </summary>
            <param name="userId">Unique id of user whos licence details are being requested.</param>
            <returns>List&lt;Licence&gt;</returns>
        </member>
        <member name="M:Middleware.ILicenceProvider.LicenceUpdateDomain(System.Int64@,Middleware.Accounts.Licences.Licence@,System.String@)">
            <summary>
            Updates the domain or Ip details for a licence that is linked to a specific server.
            </summary>
            <param name="userId">Unique id of the user who is updating the Licence.</param>
            <param name="licence">Licence being updated.</param>
            <param name="domain">Domain or Ip address to be applied against the Licence.</param>
            <returns>bool</returns>
        </member>
        <member name="M:Middleware.ILicenceProvider.LicenceSendEmail(System.Int64@,System.Int32@)">
            <summary>
            Requests for an email to be sent, with details of an individual licence for a user.
            </summary>
            <param name="userId">Unique id of the user makeing the request.</param>
            <param name="licenceId">Unique id of the Licence who's email details are being requested.</param>
            <returns>bool</returns>
        </member>
        <member name="M:Middleware.ILicenceProvider.LicenceTrialCreate(System.Int64@,Middleware.Accounts.Licences.LicenceType@)">
            <summary>
            Request to create a trial licence for a product.
            </summary>
            <param name="userId">Unique id of the user requesting a trial licence.</param>
            <param name="licenceType">Type of licence a trial key is being requested for.</param>
            <returns>LicenceCreate</returns>
        </member>
        <member name="T:Middleware.ILoginProvider">
            <summary>
            Login provider used to manage user logons for the website.
            
            This item must be implemented by the host application and made available via DI.
            </summary>
        </member>
        <member name="M:Middleware.ILoginProvider.Login(System.String@,System.String@,System.String@,System.Byte@,Middleware.UserLoginDetails@)">
            <summary>
            Login attempt by a user.
            </summary>
            <param name="username">Name or email address of user attempting to login.</param>
            <param name="password">Password for user attempting to login.</param>
            <param name="ipAddress">Ip Address of user attempting to login.</param>
            <param name="attempts">Number of previous login attempts.</param>
            <param name="loginDetails">out.  Login details for the user.</param>
            <returns>LoginResult</returns>
        </member>
        <member name="M:Middleware.ILoginProvider.Login(Middleware.ITokenUserDetails@,Middleware.UserLoginDetails@)">
            <summary>
            Logs a user in using an external provider (google, facebook etc)
            </summary>
            <param name="tokenUserDetails">ITokenUserDetails containing user details</param>
            <param name="loginDetails">out.  Login details for the user.</param>
            <returns></returns>
        </member>
        <member name="M:Middleware.ILoginProvider.RemoveExternalUser(Middleware.ITokenUserDetails)">
            <summary>
            Removes an external user from the system
            </summary>
            <param name="tokenUserDetails">ITokenUserDetails containing details of user to be removed.</param>
        </member>
        <member name="M:Middleware.ILoginProvider.UnlockAccount(System.String@,System.String@)">
            <summary>
            Instruction to unlock the account for a user.
            </summary>
            <param name="username">Name or email address of user whos account needs unlocking.</param>
            <param name="unlockCode">Unlock code provided by the user.</param>
            <returns>bool.  True if the account was unlocked.</returns>
        </member>
        <member name="M:Middleware.ILoginProvider.ForgottenPassword(System.String@)">
            <summary>
            Forgotten password request for a user.
            </summary>
            <param name="username">Name or email address of user who is requesting a new password.</param>
            <returns>bool.  True if a reminder or change password was sent to the user.</returns>
        </member>
        <member name="T:Middleware.IPaymentProvider">
            <summary>
            PaymentProvider instance, this interface represents an individual payment provider against which
            a shopping cart could be checked out against.
            
            This item must be implemented by the host application and made available via DI.
            </summary>
        </member>
        <member name="M:Middleware.IPaymentProvider.GetCurrencies">
            <summary>
            Returns the supported currencies for the payment provider, seperated by ;
            
            i.e.  GPB;USD  or GBP  or GBP;USD;EUR
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:Middleware.IPaymentProvider.ExecuteTest(Shared.Classes.NVPCodec@)">
            <summary>
            Test Execute Method for debugging purposes.
            </summary>
            <returns>bool.  True if the test passed.</returns>
        </member>
        <member name="M:Middleware.IPaymentProvider.Execute(Microsoft.AspNetCore.Http.HttpRequest@,Middleware.Accounts.Orders.Order@,Middleware.PaymentStatus@,Shared.Classes.UserSession@,System.String@)">
            <summary>
            Execute method, completes the payment using the interface specified
            </summary>
            <param name="request">Current HttpRequest</param>
            <param name="order">Order who's payment attempt is being made against.</param>
            <param name="paymentStatus">Current PaymentStatus</param>
            <param name="userSession">UserSession for the user who is making the payment.</param>
            <param name="urlParameters">Url where the user is to be redirected to, so that the order can be completed.</param>
            <returns>bool.  True if the payment was successfully executed.  This could vary depending on the payment provider in question.</returns>
        </member>
        <member name="M:Middleware.IPaymentProvider.Name">
            <summary>
            Returns the name of the payment provider.
            </summary>
            <returns>string.  Unique name of payment provider.</returns>
        </member>
        <member name="M:Middleware.IPaymentProvider.Enabled">
            <summary>
            Determines wether the payment provider is active or not
            </summary>
            <returns>bool.  True if the payment provider is ok to use.</returns>
        </member>
        <member name="M:Middleware.IPaymentProvider.UniqueId">
            <summary>
            Unique Id for payment provider
            </summary>
            <returns>Guid</returns>
        </member>
        <member name="T:Middleware.IProductProvider">
            <summary>
            Product provider interface, used to query product data.  
            
            This item must be implemented by the host application and made available via DI.
            </summary>
        </member>
        <member name="M:Middleware.IProductProvider.ProductGroupsGet">
            <summary>
            Request to retrieve all product groups that will be displayed on the website.
            </summary>
            <returns>List&lt;ProductGroup&gt;</returns>
        </member>
        <member name="M:Middleware.IProductProvider.ProductGroupGet(System.Int32@)">
            <summary>
            Request to retrieve an individual product group based on its Id.
            </summary>
            <param name="id">Id of product group to retrieve.</param>
            <returns>ProductGroup</returns>
        </member>
        <member name="M:Middleware.IProductProvider.ProductGroupSave(System.Int32@,System.String@,System.Boolean@,System.Int32@,System.String@,System.String@,System.String@)">
            <summary>
            Saves changes to a an existing product group or creates a new product group
            </summary>
            <param name="id">id of product group being saved if an existing product group, otherwise -1 for a new group</param>
            <param name="description">Description of product group</param>
            <param name="showOnWebsite">Indicates whether the group is shown on a website or not</param>
            <param name="sortOrder">Sort order for product group relative to other groups</param>
            <param name="tagLine">Tagline for product group, usually displayed at the top of the page, if set</param>
            <param name="url">Specific url for product group, if available</param>
            <param name="errorMessage">Error message when saving the group, if the result is false</param>
            <returns>bool</returns>
        </member>
        <member name="M:Middleware.IProductProvider.ProductGroupDelete(System.Int32@,System.String@)">
            <summary>
            Deletes a product group
            </summary>
            <param name="id">Id of product group to be deleted</param>
            <param name="errorMessage">error message if delete fails</param>
            <returns>bool</returns>
        </member>
        <member name="M:Middleware.IProductProvider.GetProducts(System.Int32@,System.Int32@)">
            <summary>
            Retrieves a group of products for display on the website.
            </summary>
            <param name="page">Page number of products to retrieve.</param>
            <param name="pageSize">Number of product items per page.</param>
            <returns>List&lt;Product&gt;</returns>
        </member>
        <member name="M:Middleware.IProductProvider.GetProducts(Middleware.Products.ProductGroup@,System.Int32@,System.Int32@)">
            <summary>
            Retrieves all products belonging to a product group.
            </summary>
            <param name="productGroup">ProductGroup instance.</param>
            <param name="page">Page number of products to retrieve.</param>
            <param name="pageSize">Number of product items per page.</param>
            <returns>List&lt;Product&gt;</returns>
        </member>
        <member name="M:Middleware.IProductProvider.GetProduct(System.Int32@)">
            <summary>
            Retrieves an individual product based on its unique Id.
            </summary>
            <param name="id">Id of product to retrieve.</param>
            <returns>Product</returns>
        </member>
        <member name="P:Middleware.IProductProvider.ProductCount">
            <summary>
            Retrieves the count of visible products
            </summary>
        </member>
        <member name="M:Middleware.IProductProvider.ProductSave(System.Int32@,System.Int32@,System.String@,System.String@,System.String@,System.String@,System.Boolean@,System.Boolean@,System.Decimal@,System.String@,System.Boolean@,System.Boolean@,System.String@)">
            <summary>
            Saves changes to an existing product or creates a new product
            </summary>
            <param name="id">id of product being saved if an existing product, otherwise -1 for a new product</param>
            <param name="productGroupId">Primary product id</param>
            <param name="name">Product Name</param>
            <param name="description">Product Description</param>
            <param name="features">List of features for a product</param>
            <param name="videoLink">Video link for a product</param>
            <param name="newProduct">Indicates that this is a new product</param>
            <param name="bestSeller">Indicates that this is a best seller</param>
            <param name="retailPrice">Retail price (excluding taxes) for a product</param>
            <param name="sku">Product SKU</param>
            <param name="isDownload">Indicates whether it is a downloadable product or not</param>
            <param name="allowBackOrder">Indicates that the product is available for back order if not currently available.</param>
            <param name="errorMessage">Error message when saving the product, if the result is false</param>
            <returns></returns>
        </member>
        <member name="M:Middleware.IProductProvider.ProductDelete(System.Int32@,System.String@)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="errorMessage"></param>
            <returns></returns>
        </member>
        <member name="T:Middleware.ISearchKeywordProvider">
            <summary>
            Keyword search provider interface is implemented by classes which provide keyword search 
            facilities within a plugin
            </summary>
        </member>
        <member name="M:Middleware.ISearchKeywordProvider.Search(Middleware.Search.KeywordSearchOptions@)">
            <summary>
            Interface for searching keywords
            </summary>
            <param name="searchOptions"></param>
            <returns>List&lt;SearchResponseItem&gt;</returns>
        </member>
        <member name="M:Middleware.ISearchKeywordProvider.SearchResponseTypes(System.Boolean@)">
            <summary>
            Retrieves the available search response types for all search providers.
            </summary>
            <param name="quickSearch">indicates whether the response types are from a quick search or not.</param>
            <returns>List&lt;string&gt;</returns>
        </member>
        <member name="M:Middleware.ISearchKeywordProvider.AdvancedSearch">
            <summary>
            Retrieves a string that can optionally be used by the UI to provide a paged or tabbed advance search option.
            
            Return null or empty string if the search provider should not have a custom advanced search option.
            </summary>
            <returns>Dictionary&lt;string, AdvancedSearchOptions&gt;</returns>
        </member>
        <member name="T:Middleware.ISearchProvider">
            <summary>
            Search provider, provides methods used to search within a website.
            </summary>
        </member>
        <member name="M:Middleware.ISearchProvider.KeywordSearch(Middleware.Search.KeywordSearchOptions@)">
            <summary>
            Performs a keyword search using the search options.
            </summary>
            <param name="keywordSearchOptions">Search Options</param>
            <returns>List&lt;SearchResponseItem&gt;</returns>
        </member>
        <member name="M:Middleware.ISearchProvider.SearchResponseTypes(System.Boolean@)">
            <summary>
            Retrieves the available search response types for the provider.
            </summary>
            <param name="quickSearch">indicates whether the response types are from a quick search or not.</param>
            <returns>List&lt;string&gt;</returns>
        </member>
        <member name="M:Middleware.ISearchProvider.AdvancedSearch">
            <summary>
            Retrieves a list of advanced search options for providers that can optionally be used by the UI 
            to provide a paged or tabbed advance search option.
            </summary>
            <returns>Dictionary&lt;string, AdvancedSearchOptions&gt;</returns>
        </member>
        <member name="M:Middleware.ISearchProvider.GetSearchResults(System.String@)">
            <summary>
            Retreive previous named search results.
            </summary>
            <param name="searchId">Name of search to be found.</param>
            <returns>List&lt;SearchResponseItem&gt;</returns>
        </member>
        <member name="T:Middleware.IShoppingCartProvider">
            <summary>
            Shopping cart provider interface, used to query shopping cart data.  
            
            This item must be implemented by the host application and made available via DI.
            </summary>
        </member>
        <member name="M:Middleware.IShoppingCartProvider.GetDetail(System.Int64@)">
            <summary>
            Retrieves detailed information on a shopping cart.
            </summary>
            <param name="shoppingCartId">Unique shopping cart id</param>
            <returns>ShoppingCartDetail</returns>
        </member>
        <member name="M:Middleware.IShoppingCartProvider.AddToCart(Shared.Classes.UserSession@,SharedPluginFeatures.ShoppingCartSummary@,Middleware.Products.Product@,System.Int32@)">
            <summary>
            Adds an individual product to a shopping cart.
            </summary>
            <param name="userSession">UserSession for user adding the item to a cart.</param>
            <param name="shoppingCart">The shopping cart the item is being added to.</param>
            <param name="product">Product item to be added to a cart.</param>
            <param name="count">Number of items to add.</param>
            <returns>long.  Unique id of the item within the shopping cart.</returns>
        </member>
        <member name="M:Middleware.IShoppingCartProvider.ValidateVoucher(SharedPluginFeatures.ShoppingCartSummary@,System.String@,System.Int64@)">
            <summary>
            Validates a shopping cart voucher to determine its validity.
            </summary>
            <param name="cartSummary">Shoping cart against which the voucher should be validated against.</param>
            <param name="voucher">Voucher code being validated.</param>
            <param name="userId">Id of the user attempting to validate the voucher.</param>
            <returns>bool.  True if the voucher is valid.</returns>
        </member>
        <member name="M:Middleware.IShoppingCartProvider.ConvertToOrder(SharedPluginFeatures.ShoppingCartSummary@,System.Int64@,Middleware.Accounts.Orders.Order@)">
            <summary>
            Converts a shopping cart to an order.
            </summary>
            <param name="cartSummary">ShoppingCartSummary item to be converted to an order.</param>
            <param name="userId">User id who is checking out the shopping cart.</param>
            <param name="order">out.  Converted order.</param>
            <returns>bool.  True if the shopping cart was successfully converted to an order.</returns>
        </member>
        <member name="T:Middleware.ISmokeTestProvider">
            <summary>
            Provides an opportunity for the website to provide custom data which can be used as part
            of the smoke test.
            </summary>
        </member>
        <member name="M:Middleware.ISmokeTestProvider.SmokeTestStart">
            <summary>
            Indicates the test is about to start.
            
            The result of this method can contain custom name value pairs, this can be used by the Smoke Test engine
            when preparing tests to be run.
            
            For example the following name value pair could be used to indicate a logged on user name and password:
            
            LoggedOnUser=admin
            LoggedOnUserPassword=qwerty123
            
            When a test is being prepared, it will search for {LoggedOnUser} within the body, or form parameters and
            the value will be replaced with admin and {LoggedOnUserPassword} will be searched for in the form parameters
            or body and replaced with qwerty123
            
            Ideally the test data should be created when this function is called and cleaned up using <seealso cref="M:Middleware.ISmokeTestProvider.SmokeTestEnd"/>.
            
            Data can be created dynamically within a database or other storage mechanism to help test functionality of a website.
            </summary>
            <returns>NVPCodec instance containing name value pairs that will be returned to the Smoke Test Engine or null if not required.</returns>
        </member>
        <member name="M:Middleware.ISmokeTestProvider.SmokeTestEnd">
            <summary>
            Indicates that the Smoke Test has finished and that all previously created data can be cleaned up and removed.
            </summary>
        </member>
        <member name="T:Middleware.IStockProvider">
            <summary>
            Stock provider interface, disigned to provide stock quantities for individual prodoucts
            </summary>
        </member>
        <member name="M:Middleware.IStockProvider.GetStockAvailability(Middleware.Products.Product@)">
            <summary>
            Sets the current available stock level for an individual product.
            </summary>
            <param name="product">Product who's stock will be checked, the StockAvailability property for the product will be updated with the stock level.</param>
        </member>
        <member name="M:Middleware.IStockProvider.GetStockAvailability(System.Collections.Generic.List{Middleware.Products.Product}@)">
            <summary>
            Sets the current available stock level for a list of product items.
            </summary>
            <param name="productList">List of products who's stock will be checked, the StockAvailability property for the product will be updated with the stock level.</param>
        </member>
        <member name="M:Middleware.IStockProvider.GetStockAvailability(Middleware.ShoppingCart.ShoppingCartItem@)">
            <summary>
            Sets the current available stock level for an individual product within a shopping cart.
            </summary>
            <param name="shoppingCartItem">ShoppingCartItem who's stock will be updated.</param>
        </member>
        <member name="M:Middleware.IStockProvider.GetStockAvailability(System.Collections.Generic.List{Middleware.ShoppingCart.ShoppingCartItem}@)">
            <summary>
            Sets the current available stock level for a list of products within a shopping cart.
            </summary>
            <param name="shoppingCartItemList">ShoppingCartItem who's stock will be updated.</param>
        </member>
        <member name="T:Middleware.ITokenUserDetails">
            <summary>
            User details obtained via OAuth
            </summary>
        </member>
        <member name="P:Middleware.ITokenUserDetails.Id">
            <summary>
            User Id
            </summary>
        </member>
        <member name="P:Middleware.ITokenUserDetails.Name">
            <summary>
            User name
            </summary>
        </member>
        <member name="P:Middleware.ITokenUserDetails.GivenName">
            <summary>
            Give name
            </summary>
        </member>
        <member name="P:Middleware.ITokenUserDetails.Email">
            <summary>
            Email address
            </summary>
        </member>
        <member name="P:Middleware.ITokenUserDetails.Picture">
            <summary>
            Picture
            </summary>
        </member>
        <member name="P:Middleware.ITokenUserDetails.Provider">
            <summary>
            Provider of the current credentials
            </summary>
        </member>
        <member name="P:Middleware.ITokenUserDetails.Verify">
            <summary>
            Indicates whether we are just verifying the details or performing a login
            </summary>
        </member>
        <member name="T:Middleware.IUserApiQueryProvider">
            <summary>
            Interface used to query a users api details in order to validate requests
            </summary>
        </member>
        <member name="M:Middleware.IUserApiQueryProvider.ApiSecret(System.String,System.String,System.String@)">
            <summary>
            Retrieves the Api Secret associated with the merchant and api key
            </summary>
            <param name="merchantId">Unique Merchant Id</param>
            <param name="apiKey">Unique Merchant Api Key</param>
            <param name="secret">The secret associated with the merchanes Api Key</param>
            <returns>bool</returns>
        </member>
        <member name="T:Middleware.IUserSearch">
            <summary>
            Interface for searching system users, includes administrators, staff and web users.
            </summary>
        </member>
        <member name="M:Middleware.IUserSearch.GetUsers(System.Int32@,System.Int32@,System.String,System.String)">
            <summary>
            Search for users.
            </summary>
            <param name="pageNumber">Page number.</param>
            <param name="pageSize">Page size.</param>
            <param name="searchField">Field which is being searched.</param>
            <param name="searchOrder">Search order for search field.</param>
            <returns>List&lt;Users&gt;</returns>
        </member>
    </members>
</doc>
