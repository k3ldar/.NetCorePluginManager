@model DynamicContent.Plugin.Model.FormTemplateEditorModel
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer

<div class="tab-content" id="nav-tabContent" style="margin: 5px;">
    @Html.HiddenFor(m => m.Data)
    <div class="form-check">
        @if (Model.AlignTop)
        {
            <input class="form-check-input" type="radio" onclick="updateFC();" name="rbAlign" id="labelAlignTop" checked>
        }
        else
        {
            <input class="form-check-input" type="radio" onclick="updateFC();" name="rbAlign" id="labelAlignTop">
        }
        <label class="form-check-label" for="labelAlignTop">
            @Localizer[Languages.LanguageStrings.AppTextAlignmentTop]
        </label>
    </div>
    <div class="form-check">
        @if (Model.AlignTop)
        {
            <input class="form-check-input" type="radio" onclick="updateFC();" name="rbAlign" id="labelAlignLeft">
        }
        else
        {
            <input class="form-check-input" type="radio" onclick="updateFC();" name="rbAlign" id="labelAlignLeft" checked>
        }
        <label class="form-check-label" for="labelAlignLeft">
            @Model.AlignLeftText
        </label>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ControlName)
        <input id="ControlName" name="ControlName" type="text" style="width:60%;float:right;" class="form-control" value="@Model.ControlName" onclick="updateFC();" onfocusout="updateFC();">
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ControlStyle)
        <input id="ControlStyle" name="ControlStyle" type="text" style="width:60%;float:right;" class="form-control" value="@Model.ControlStyle" onclick="updateFC();" onfocusout="updateFC();">
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.LabelText)
        <input id="LabelText" name="LabelText" type="text" style="width:60%;float:right;" class="form-control" value="@Model.LabelText" onclick="updateFC();" onfocusout="updateFC();">
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.LabelStyle)
        <input id="LabelStyle" name="LabelStyle" type="text" style="width:60%;float:right;" class="form-control" value="@Model.LabelStyle" onclick="updateFC();" onfocusout="updateFC();">
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        updateFC();
    });

    function updateFC() {
        var vAlTop = document.getElementById('labelAlignTop');
        var vlStyle = document.getElementById('@nameof(Model.LabelStyle)');
        var vName = document.getElementById('@nameof(Model.ControlName)');
        var vcStyle = document.getElementById('@nameof(Model.ControlStyle)');
        var vLblText = document.getElementById('@nameof(Model.LabelText)');
        var vData = document.getElementById('@nameof(Model.Data)');
        var autoWidth = @Model.AutoWidth.ToString().ToLower();

        if (autoWidth && !vAlTop.checked && vcStyle.value == "") {
            vcStyle.value = "width:60%;float:right;";
        }

        vData.value = vName.value + '|' + vLblText.value + '|' + vAlTop.checked + '|' + vlStyle.value + '|' + vcStyle.value;
    };
</script>